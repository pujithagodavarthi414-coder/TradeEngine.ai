//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentStorageService.Common.Texts {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LangText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public LangText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DocumentStorageService.Common.Texts.LangText", typeof(LangText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extension can not be more than 50 characters..
        /// </summary>
        public static string ExceededFileExtension {
            get {
                return ResourceManager.GetString("ExceededFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name can not be more than 800 characters..
        /// </summary>
        public static string ExceededFileName {
            get {
                return ResourceManager.GetString("ExceededFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path can not be more than 2000 characters..
        /// </summary>
        public static string ExceededFilePath {
            get {
                return ResourceManager.GetString("ExceededFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder name can not be more than 50 characters..
        /// </summary>
        public static string ExceededFolderName {
            get {
                return ResourceManager.GetString("ExceededFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create or update access rights permissions should not be done.Please contact administarator.
        /// </summary>
        public static string ExceptionAccessRightsUpsert {
            get {
                return ResourceManager.GetString("ExceptionAccessRightsUpsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot delete temporary file chunk data..
        /// </summary>
        public static string ExceptionFileCannotDeleteChunckData {
            get {
                return ResourceManager.GetString("ExceptionFileCannotDeleteChunckData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read multi part file data.
        /// </summary>
        public static string ExceptionFileCannotReadMultiPartData {
            get {
                return ResourceManager.GetString("ExceptionFileCannotReadMultiPartData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete folder should not be done.Please contact administrator.
        /// </summary>
        public static string ExceptionFolderDelete {
            get {
                return ResourceManager.GetString("ExceptionFolderDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder could not be created or updated. Please contact administrator..
        /// </summary>
        public static string ExceptionFolderUpsert {
            get {
                return ResourceManager.GetString("ExceptionFolderUpsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search file should not be done.Please contact administrator.
        /// </summary>
        public static string ExceptionSearchFile {
            get {
                return ResourceManager.GetString("ExceptionSearchFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot get the Folder. Please contact administrator..
        /// </summary>
        public static string ExceptionSearchFolders {
            get {
                return ResourceManager.GetString("ExceptionSearchFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store should not be created or updated.Please contact administrator.
        /// </summary>
        public static string ExceptionStoreUpsert {
            get {
                return ResourceManager.GetString("ExceptionStoreUpsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File could not be created or updated. Please contact administrator..
        /// </summary>
        public static string ExceptionUpsertFile {
            get {
                return ResourceManager.GetString("ExceptionUpsertFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File with this Id cannot exists.
        /// </summary>
        public static string FileIdNotExists {
            get {
                return ResourceManager.GetString("FileIdNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page size should be in between 1 and 1000..
        /// </summary>
        public static string MaximumLengthPageSize {
            get {
                return ResourceManager.GetString("MaximumLengthPageSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extension can not be empty..
        /// </summary>
        public static string NotEmptyFileExtension {
            get {
                return ResourceManager.GetString("NotEmptyFileExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Id cannot be empty.
        /// </summary>
        public static string NotEmptyFileId {
            get {
                return ResourceManager.GetString("NotEmptyFileId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name cannot be empty.
        /// </summary>
        public static string NotEmptyFileName {
            get {
                return ResourceManager.GetString("NotEmptyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path can not be empty..
        /// </summary>
        public static string NotEmptyFilePath {
            get {
                return ResourceManager.GetString("NotEmptyFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder Name can not be empty..
        /// </summary>
        public static string NotEmptyFolderName {
            get {
                return ResourceManager.GetString("NotEmptyFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reference type id should not be null.
        /// </summary>
        public static string NotEmptyReferenceTypeId {
            get {
                return ResourceManager.GetString("NotEmptyReferenceTypeId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StoreId cannot be empty.
        /// </summary>
        public static string NotEmptyStoreId {
            get {
                return ResourceManager.GetString("NotEmptyStoreId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store name should not be empty.
        /// </summary>
        public static string NotEmptyStoreName {
            get {
                return ResourceManager.GetString("NotEmptyStoreName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page number is required.
        /// </summary>
        public static string PageNumberRequired {
            get {
                return ResourceManager.GetString("PageNumberRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Page size is required.
        /// </summary>
        public static string PageSizeRequired {
            get {
                return ResourceManager.GetString("PageSizeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ReferenceType  with this Id cannot exists.
        /// </summary>
        public static string ReferenceTypeIdNotExists {
            get {
                return ResourceManager.GetString("ReferenceTypeIdNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Store name should not exceed 50 characters.
        /// </summary>
        public static string StoreLengthExceeded {
            get {
                return ResourceManager.GetString("StoreLengthExceeded", resourceCulture);
            }
        }
    }
}
