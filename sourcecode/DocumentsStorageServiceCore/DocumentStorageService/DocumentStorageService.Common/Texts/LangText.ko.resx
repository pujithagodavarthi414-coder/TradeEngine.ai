<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExceededFileExtension" xml:space="preserve">
    <value>파일 확장자는 50자를 초과 할 수 없습니다.</value>
  </data>
  <data name="ExceededFileName" xml:space="preserve">
    <value>파일 이름은 800자를 초과 할 수 없습니다.</value>
  </data>
  <data name="ExceededFilePath" xml:space="preserve">
    <value>파일 경로는 2000자를 초과 할 수 없습니다.</value>
  </data>
  <data name="ExceededFolderName" xml:space="preserve">
    <value>폴더 이름은 50자를 초과 할 수 없습니다.</value>
  </data>
  <data name="ExceptionAccessRightsUpsert" xml:space="preserve">
    <value>접근 권한을 생성하거나 업데이트하면 안 됩니다. 관리자에게 문의하세요.</value>
  </data>
  <data name="ExceptionFileCannotDeleteChunckData" xml:space="preserve">
    <value>임시 파일 청크 데이터를 삭제할 수 없습니다..</value>
  </data>
  <data name="ExceptionFileCannotReadMultiPartData" xml:space="preserve">
    <value>다중 파트 파일 데이터를 읽을 수 없습니다.</value>
  </data>
  <data name="ExceptionFolderDelete" xml:space="preserve">
    <value>폴더 삭제는 안됩니다. 관리자에게 문의하세요.</value>
  </data>
  <data name="ExceptionFolderUpsert" xml:space="preserve">
    <value>폴더를 만들거나 업데이트 할 수 없습니다. 관리자에게 문의하십시오.</value>
  </data>
  <data name="ExceptionSearchFile" xml:space="preserve">
    <value>파일 검색이 안됩니다. 관리자에게 문의하세요.</value>
  </data>
  <data name="ExceptionSearchFolders" xml:space="preserve">
    <value>폴더를 가져올 수 없습니다. 관리자에게 문의하십시오.</value>
  </data>
  <data name="ExceptionStoreUpsert" xml:space="preserve">
    <value>스토어를 생성하거나 업데이트할 수 없습니다. 관리자에게 문의하세요.</value>
  </data>
  <data name="ExceptionUpsertFile" xml:space="preserve">
    <value>파일을 만들거나 업데이트 할 수 없습니다. 관리자에게 문의하십시오.</value>
  </data>
  <data name="FileIdNotExists" xml:space="preserve">
    <value>이 ID를 가진 파일은 존재할 수 없습니다</value>
  </data>
  <data name="MaximumLengthPageSize" xml:space="preserve">
    <value>페이지 크기는 1에서 1000 사이여야 합니다.</value>
  </data>
  <data name="NotEmptyFileExtension" xml:space="preserve">
    <value>파일 확장자는 비워 둘 수 없습니다.</value>
  </data>
  <data name="NotEmptyFileId" xml:space="preserve">
    <value>파일 ID는 비워둘 수 없습니다.</value>
  </data>
  <data name="NotEmptyFilePath" xml:space="preserve">
    <value>파일 경로는 비워 둘 수 없습니다.</value>
  </data>
  <data name="NotEmptyFolderName" xml:space="preserve">
    <value>폴더 이름은 비워 둘 수 없습니다.</value>
  </data>
  <data name="NotEmptyReferenceTypeId" xml:space="preserve">
    <value>참조 유형 ID는 null이 아니어야 합니다.</value>
  </data>
  <data name="NotEmptyStoreId" xml:space="preserve">
    <value>StoreId는 비워둘 수 없습니다.</value>
  </data>
  <data name="NotEmptyStoreName" xml:space="preserve">
    <value>상점 이름은 비워둘 수 없습니다.</value>
  </data>
  <data name="PageNumberRequired" xml:space="preserve">
    <value>페이지 번호는 필수 항목입니다.</value>
  </data>
  <data name="PageSizeRequired" xml:space="preserve">
    <value>페이지 크기는 필수 항목입니다.</value>
  </data>
  <data name="ReferenceTypeIdNotExists" xml:space="preserve">
    <value>이 ID의 ReferenceType은 존재할 수 없습니다.</value>
  </data>
  <data name="StoreLengthExceeded" xml:space="preserve">
    <value>상점 이름은 50자를 초과할 수 없습니다.</value>
  </data>
</root>