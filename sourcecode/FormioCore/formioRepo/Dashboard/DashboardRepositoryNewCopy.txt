using formioCommon.Constants;
using formioModels.Dashboard;
using formioModels;
using System;
using System.Collections.Generic;
using System.Linq;
using MongoDB.Bson;
using formioModels.Data;
using MongoDB.Driver;
using Microsoft.Extensions.Configuration;
using formioRepo.Helpers;
using static formioRepo.Dashboard.CommodityConstants;
using Microsoft.AspNetCore.Mvc;

namespace formioRepo.Dashboard
{
    public class DashboardRepositoryNewCopy
    {
        private readonly IConfiguration _iconfiguration;
        public DashboardRepositoryNewCopy(IConfiguration iConfiguration)
        {
            _iconfiguration = iConfiguration;
        }

        protected IMongoCollection<T> GetMongoCollectionObject<T>(string collectionName)
        {
            IMongoDatabase imongoDb = GetMongoDbConnection();
            return imongoDb.GetCollection<T>(collectionName);
        }
        protected IMongoDatabase GetMongoDbConnection()
        {
            MongoClient client = new MongoClient(_iconfiguration["MongoDBConnectionString"]);
            return client.GetDatabase(_iconfiguration["MongoCommunicatorDB"]);
        }

        public VesselDashboardOutputModel GetVesselDashboard(VesselDashboardInputModel inputModel, LoggedInContext loggedInContext, List<ValidationMessage> validationMessages, bool? isloop = false)
        {
            LoggingManager.Info(string.Format(LoggingManagerAppConstants.LoggingManagerInfoValue, "GetVesselDashboard", "DataSetService"));
            IMongoCollection<DataSetOutputModel> datasetCollection = GetMongoCollectionObject<DataSetOutputModel>(MongoDBCollectionConstants.DataSet);
            var aggregateOptions = new AggregateOptions() { AllowDiskUse = true };
            VesselDashboardOutputModel result = new VesselDashboardOutputModel();
            List<ProductionDataModel> productionList = new List<ProductionDataModel>();
            List<ProfitAndLossModel> profitandlossList = new List<ProfitAndLossModel>();

            PurchaseFormIds.TryGetValue(inputModel.CompanyName, out string purchageFormId);
            SalesFormIds.TryGetValue(inputModel.CompanyName, out string salesFormId);
            CustomsDutyFormIds.TryGetValue(inputModel.CompanyName, out string customsDutyFormId);

            purchageFormId = purchageFormId.ToLower();
            salesFormId = salesFormId.ToLower();
            customsDutyFormId = customsDutyFormId.ToLower();
            string vesselIdString = inputModel.ContractUniqueId;
            string dailyRatesFormId = DailyRatesFormId.ToLower();
            string dutyFormId = DutyFormId.ToLower();
            string fxPaymentsFormId = inputModel.CompanyName == "Umiro-INDIA" ?
                                             FXPaymentsUmiroFormId.ToLower()
                                             : FXPaymentsANAFormId.ToLower();
            string locationMasterFormId = LocationMasterFormId.ToLower();
            string CompanyIdString = loggedInContext.CompanyGuid.ToString().ToLower();
            DateTime fromDate = inputModel.FromDate ?? DateTime.UtcNow;
            DateTime toDate = inputModel.Todate ?? DateTime.UtcNow;
            int fromDay = fromDate.Day;
            int fromMonth = fromDate.Month;
            int fromYear = fromDate.Year;
            int toDay = toDate.Day;
            int toMonth = toDate.Month;
            int toYear = toDate.Year;
            string location = inputModel.CompanyName == "Umiro-INDIA" ? "umiro-india" : "ana-india";
            string subLocation = "";
            decimal finalQty = 0;
            decimal valueInr = 0;

            List<BsonDocument> pipelineSourceData = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", purchageFormId },
                        { "CompanyId", CompanyIdString },
                        { "IsArchived", false },
                        { "DataJson.FormData.uniqueIdImportLocal", vesselIdString }
                    }),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "Source", "$DataJson.FormData.commodity" },
                        { "SubLocation", "$DataJson.FormData.location" },
                        { "ProductName", "$DataJson.FormData.productGroup1" },
                        { "TotalQty", "$DataJson.FormData.contractQuantityMt" },
                        { "ContractQty", "$DataJson.FormData.netPurchasesSinceJan2023" },
                        { "FinalQty", "$DataJson.FormData.finalAdjustedQuantityMt" },
                        { "ValueInr", "$DataJson.FormData.valueInr" },
                        { "SOTQty",
                            new BsonDocument("$ifNull",
                                new BsonArray
                                {
                                    "$DataJson.FormData.sotQuantityMt",
                                    0
                                })
                        },
                        { "AdjustmentQty",
                                new BsonDocument("$ifNull",
                                new BsonArray
                                {
                                    "$DataJson.FormData.adjustmentQuantityMt",
                                    0
                                })
                        }
                    })
            };
            var sourceDataSet = datasetCollection.Aggregate<BsonDocument>(pipelineSourceData, aggregateOptions).FirstOrDefault();

            if (sourceDataSet != null)
            {
                result.SourceCommodity = sourceDataSet.TryGetValue("Source", out BsonValue sourceValue) && sourceValue.IsString ? sourceValue.AsString : string.Empty;
                subLocation = sourceDataSet.TryGetValue("SubLocation", out BsonValue subLocationValue) && subLocationValue.IsString ? subLocationValue.AsString : string.Empty;
                result.ProductGroup = sourceDataSet.TryGetValue("ProductName", out BsonValue productNameValue) && productNameValue.IsString ? productNameValue.AsString : string.Empty;
                result.TotalContractQuantity = sourceDataSet.TryGetValue("TotalQty", out BsonValue totalQtyValue) && totalQtyValue.RawValue != null ? totalQtyValue.ToDecimal() : 0;
                result.PurchaseQuantity = sourceDataSet.TryGetValue("ContractQty", out BsonValue contractQtyValue) && contractQtyValue.RawValue != null ? contractQtyValue.ToDecimal() : 0;
                result.TotalSotQuantity = sourceDataSet.TryGetValue("SOTQty", out BsonValue sotQtyValue) && sotQtyValue.RawValue != null ? sotQtyValue.ToDecimal() : 0;
                result.AddBack = sourceDataSet.TryGetValue("AdjustmentQty", out BsonValue adjustmentQtyValue) && adjustmentQtyValue.RawValue != null ? adjustmentQtyValue.ToDecimal() : 0;
                result.SotDifference = result.TotalContractQuantity - result.PurchaseQuantity; //4.Net Purchases since Jan 2023(MT)
                finalQty = sourceDataSet.TryGetValue("FinalQty", out BsonValue finalQtyValue) && finalQtyValue.RawValue != null ? finalQtyValue.ToDecimal() : 0;
                valueInr = sourceDataSet.TryGetValue("ValueInr", out BsonValue ValueInrValue) && ValueInrValue.RawValue != null ? ValueInrValue.ToDecimal() : 0;
            }

            if (!string.IsNullOrWhiteSpace(result.SourceCommodity))
            {
                List<BsonDocument> pipelineSalesData1 = new List<BsonDocument>
                {
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "DataSourceId", salesFormId },
                            { "CompanyId", CompanyIdString},
                            { "IsArchived", false },
                            { "DataJson.FormData.ImportUniqueId", vesselIdString },
                            { "DataJson.FormData.commodity1", new BsonDocument("$nin", new BsonArray { BsonNull.Value, "" , " "}) }
                        }),
                    new BsonDocument("$addFields",
                        new BsonDocument
                        {
                            { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                            { "dateFilter", new BsonDocument("$toDate", "$DataJson.FormData.tradeDate") }
                        }),
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "sourceCommodity", result.SourceCommodity.ToLower() },
                            { "dateFilter",
                                new BsonDocument
                                {
                                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0)) },
                                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                                }
                            }
                        }),
                    new BsonDocument("$group",
                        new BsonDocument
                        {
                            { "_id", "$DataJson.FormData.commodity1" },
                            { "soldQty", new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") },
                            { "realisedValue", new BsonDocument("$sum", "$DataJson.FormData.valueInr1") }
                        }),
                    new BsonDocument("$project",
                        new BsonDocument
                        {
                            { "_id", 0 },
                            { "Commodity", new BsonDocument("$toLower", "$_id") },
                            { "RealisedValue", new BsonDocument("$ifNull", new BsonArray { "$realisedValue", 0 }) },
                            { "SoldQty", new BsonDocument("$ifNull", new BsonArray { "$soldQty", 0 }) }
                        })
                };

                var salesDataSet1 = datasetCollection.Aggregate<BsonDocument>(pipelineSalesData1, aggregateOptions).ToList();
                List<salesList1> salesList1 = BsonHelper.ConvertBsonDocumentListToModel<salesList1>(salesDataSet1).ToList();

                List<BsonDocument> pipelineSalesData2 = new List<BsonDocument>
                {
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "DataSourceId", salesFormId },
                        { "CompanyId", CompanyIdString },
                        { "IsArchived", false },
                        { "DataJson.FormData.ImportUniqueId", vesselIdString }
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "dateFilter", new BsonDocument("$toDate", "$DataJson.FormData.tradeDate") }
                    }),
                    new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                    {
                        { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0)) },
                        { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }

                    })),
                    new BsonDocument("$group", new BsonDocument
                    {
                        { "_id", BsonNull.Value },
                        { "RefiningCost", new BsonDocument("$sum", "$DataJson.FormData.expectedRefiningCostInr1") },
                        { "cpo", new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
                        { "cpo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cpoTradingMt") },
                        { "rbd-palm-olein", new BsonDocument("$sum", "$DataJson.FormData.rbdOleinMt") },
                        { "refined-palm-oil", new BsonDocument("$sum", "$DataJson.FormData.rpoMt") },
                        { "stearin", new BsonDocument("$sum", "$DataJson.FormData.stearinMt") },
                        { "soft-stearin", new BsonDocument("$sum", "$DataJson.FormData.softStearinMt") },
                        { "hard-stearin", new BsonDocument("$sum", "$DataJson.FormData.hardStearinMt") },
                        { "pfad", new BsonDocument("$sum", "$DataJson.FormData.pfadMt") },
                        { "white-olein", new BsonDocument("$sum", "$DataJson.FormData.whiteOleinMt") },
                        { "calcium-soap", new BsonDocument("$sum", "$DataJson.FormData.calciumSoapMt") },
                        { "loss", new BsonDocument("$sum", "$DataJson.FormData.lossMt") },
                        { "rbd-palm-olein-trading", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinImportMt") },
                        { "rbd-palm-olein-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinTradingMt") },
                        { "refined-palm-oil-trading", new BsonDocument("$sum", "$DataJson.FormData.rpoMt1") },
                        { "refined-palm-oil-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rpoMt2") },
                        { "csfo", new BsonDocument("$sum", "$DataJson.FormData.csfoMt") },
                        { "csfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.csfoTradingMt") },
                        { "rsfo", new BsonDocument("$sum", "$DataJson.FormData.rsfoMt") },
                        { "sunflower-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.sunflowerFattyAcidMt") },
                        { "rsfo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsfoLocalMt") },
                        { "rsfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsfoTradingMt") },
                        { "crbo", new BsonDocument("$sum", "$DataJson.FormData.crboMt") },
                        { "crbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.crboTradingMt") },
                        { "rrbo", new BsonDocument("$sum", "$DataJson.FormData.rrboMt") },
                        { "rb-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.rbFattyAcidMt") },
                        { "rb-oil-wax", new BsonDocument("$sum", "$DataJson.FormData.rbOilWaxMt") },
                        { "rrbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rrboLocalMt") },
                        { "rrbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rrboTradingMt") },
                        { "cdsbo", new BsonDocument("$sum", "$DataJson.FormData.cdsboMt") },
                        { "cdsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cdsboTradingMt") },
                        { "rsbo", new BsonDocument("$sum", "$DataJson.FormData.rsboMt") },
                        { "soy-acid-oil", new BsonDocument("$sum", "$DataJson.FormData.soyAcidOilMt") },
                        { "rsbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsboLocalMt") },
                        { "rsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsboTradingMt") },
                        { "crude-glycerin", new BsonDocument("$sum", "$DataJson.FormData.crudeGlycerinMt") },
                        { "refined-glycerin", new BsonDocument("$sum", "$DataJson.FormData.refinedGycerinMt") },
                        { "refined-glycerin-trading", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinLocalMt1") },
                        { "refined-glycerin-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinTradingMt") }
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "data", new BsonDocument("$map", new BsonDocument
                        {
                            { "input", new BsonDocument("$objectToArray", "$$ROOT") },
                            { "as", "item" },
                            { "in", new BsonDocument
                            {
                                { "k", "$$item.k" },
                                { "v", new BsonDocument("$cond", new BsonDocument
                                {
                                    { "if", new BsonDocument("$gt", new BsonArray { "$$item.v", 0 }) },
                                    { "then", "$$item.v" },
                                    { "else", 0 }
                                })}
                            }}
                        })}
                    }),
                    new BsonDocument("$unwind", "$data"),
                    new BsonDocument("$project", new BsonDocument
                    {
                        { "_id", 0 },
                        { "commodity", "$data.k" },
                        { "quantity", new BsonDocument("$convert", new BsonDocument
                            {
                                { "input", "$data.v" },
                                { "to", "decimal" } // Convert to decimal data type
                            })
                        }
                    })
                };

                var salesDataSet2 = datasetCollection.Aggregate<BsonDocument>(pipelineSalesData2, aggregateOptions).ToList();
                List<salesList2> salesList2 = BsonHelper.ConvertBsonDocumentListToModel<salesList2>(salesDataSet2).ToList();

                var commoditiesList = CommodityGroups[result.SourceCommodity];
                result.Utilization = salesList2.FirstOrDefault(item => item.commodity == result.SourceCommodity.Replace(" ", "-").ToLower())?.quantity ?? 0;

                List<BsonDocument> pipelineSalesData3 = new List<BsonDocument>
                {
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "DataSourceId", dailyRatesFormId },
                            { "IsArchived", false },
                            { "DataJson.FormData.commodity1",new BsonDocument("$nin",new BsonArray{BsonNull.Value,""}) },
                        }
                    ),
                    new BsonDocument("$addFields",
                        new BsonDocument
                        {
                            { "productGroup", new BsonDocument("$toLower", "$DataJson.FormData.productGroup") },
                            { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                            { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
                        }
                    ),
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "productGroup", result.ProductGroup.ToLower() },
                            { "location", location },
                            { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                        }
                    ),
                    new BsonDocument("$sort",
                        new BsonDocument("date", -1)
                    ),
                    new BsonDocument("$group",
                        new BsonDocument
                        {
                            { "_id", "$DataJson.FormData.commodity1" },
                            { "MTMRate", new BsonDocument("$first", "$DataJson.FormData.rateInr") },
                            { "USDToInr", new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
                        }
                    ),
                    new BsonDocument("$project",
                        new BsonDocument
                        {
                            { "_id", 0 },
                            { "Commodity", new BsonDocument("$toLower", "$_id") },
                            { "MTMRate", new BsonDocument("$ifNull", new BsonArray { "$MTMRate", 0 }) },
                            { "USDToInr", new BsonDocument("$ifNull", new BsonArray { "$USDToInr", 0 }) }
                        }
                    )
                };
                var salesDataSet3 = datasetCollection.Aggregate<BsonDocument>(pipelineSalesData3, aggregateOptions).ToList();
                List<salesList3> salesList3 = BsonHelper.ConvertBsonDocumentListToModel<salesList3>(salesDataSet3).ToList();

                List<BsonDocument> pipelineSalesData4 = new List<BsonDocument>
                {
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "DataSourceId", salesFormId },
                            { "CompanyId", CompanyIdString},
                            { "IsArchived", false },
                            { "DataJson.FormData.ImportUniqueId", vesselIdString },
                            { "DataJson.FormData.consumptionCommodity", new BsonDocument("$nin", new BsonArray { BsonNull.Value, "" , " "}) }
                        }),
                    new BsonDocument("$addFields",
                        new BsonDocument
                        {
                            { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                            { "dateFilter", new BsonDocument("$toDate", "$DataJson.FormData.tradeDate") }
                        }),
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "sourceCommodity", result.SourceCommodity.ToLower() },
                            { "dateFilter",
                                new BsonDocument
                                {
                                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0)) },
                                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                                }
                            }
                        }),
                    new BsonDocument("$group",
                        new BsonDocument
                        {
                            { "_id", "$DataJson.FormData.consumptionCommodity" },
                            { "soldQty", new BsonDocument("$sum", "$DataJson.FormData.consumedQuantityMt") },
                        }),
                    new BsonDocument("$project",
                        new BsonDocument
                        {
                            { "_id", 0 },
                            { "Commodity", new BsonDocument("$toLower", "$_id") },
                            { "ConsumedQty", new BsonDocument("$ifNull", new BsonArray { "$soldQty", 0 }) }
                        })
                };

                var salesDataSet4 = datasetCollection.Aggregate<BsonDocument>(pipelineSalesData4, aggregateOptions).ToList();
                List<salesList1> salesList4 = BsonHelper.ConvertBsonDocumentListToModel<salesList1>(salesDataSet4).ToList();

                foreach (var record in commoditiesList)
                {
                    ProductionDataModel dataRecord = new ProductionDataModel
                    {
                        ProducedCommodity = record.DisplayName,
                        ProducedQuantity = record.NameLower == result.SourceCommodity.ToLower() ? 0 : salesList2.FirstOrDefault(item => item.commodity == record.NameKey)?.quantity ?? 0,
                        SoldQuantity = (-1) * (salesList1.FirstOrDefault(item => item.Commodity == record.NameLower)?.SoldQty ?? 0
                                       + salesList4.FirstOrDefault(item => item.Commodity == record.NameLower)?.ConsumedQty ?? 0),
                        RealisedValue = salesList1.FirstOrDefault(item => item.Commodity == record.NameLower)?.RealisedValue ?? 0,
                        MTMRate = salesList3.FirstOrDefault(item => item.Commodity == record.NameLower)?.MTMRate ?? 0,
                        Order = record.Order
                    };
                    dataRecord.AvailableBalance = record.Name == result.SourceCommodity ?
                                                   finalQty - result.Utilization
                                                  : dataRecord.ProducedQuantity + dataRecord.SoldQuantity;
                    dataRecord.UnRealisedValue = dataRecord.AvailableBalance * dataRecord.MTMRate;

                    productionList.Add(dataRecord);
                }

                var totalRecord = new ProductionDataModel
                {
                    ProducedCommodity = "Total",
                    ProducedQuantity = productionList.Sum(x => x.ProducedQuantity),
                    SoldQuantity = productionList.Sum(x => x.SoldQuantity),
                    RealisedValue = productionList.Sum(x => x.RealisedValue),
                    MTMRate = productionList.Sum(x => x.MTMRate),
                    AvailableBalance = productionList.Sum(x => x.AvailableBalance),
                    UnRealisedValue = productionList.Sum(x => x.UnRealisedValue),
                    Order = productionList.Max(x => x.Order) + 1
                };
                productionList.Add(totalRecord);

                List<BsonDocument> pipelinePandL1 = new List<BsonDocument>
                {
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "DataSourceId", customsDutyFormId },
                        { "CompanyId", CompanyIdString },
                        { "IsArchived", false },
                        { "DataJson.FormData.selectSourceContract",  vesselIdString }
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
                    }),
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                    }),
                    new BsonDocument("$sort", new BsonDocument
                    {
                        { "date", -1 }
                    }),
                    new BsonDocument("$limit", 1),
                    new BsonDocument("$project", new BsonDocument
                    {
                        { "_id", 0 },
                        { "DutyInr", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.totalPaidDutyInclIgstValueInr", 0
                            })
                        },
                        { "DutyQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.totalUnpaidDutyQuantityMt", 0
                            })
                        }
                    })
                };
                var profitandloss1 = datasetCollection.Aggregate<BsonDocument>(pipelinePandL1, aggregateOptions).FirstOrDefault();
                decimal customsDutyInr = profitandloss1 == null ? 0 : profitandloss1.TryGetValue("DutyInr", out BsonValue customsDutyInrValue) &&
                                                  customsDutyInrValue.RawValue != null ? customsDutyInrValue.ToDecimal() : 0;
                decimal customsDutyQty = profitandloss1 == null ? 0 : profitandloss1.TryGetValue("DutyQty", out BsonValue customsDutyQtyValue) &&
                                                  customsDutyQtyValue.RawValue != null ? customsDutyQtyValue.ToDecimal() : 0;

                List<BsonDocument> pipelinePandL2 = new List<BsonDocument>
                {
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "DataSourceId", dutyFormId },
                        { "IsArchived", false },
                        { "DataJson.FormData.commodity" ,result.SourceCommodity }
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.startDate") }
                    }),
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                    }),
                    new BsonDocument("$sort", new BsonDocument
                    {
                        { "date", -1 }
                    }),
                    new BsonDocument("$limit", 1),
                    new BsonDocument("$project", new BsonDocument
                    {
                        { "_id", 0 },
                        { "InrCustomsDutyPerMt", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.inrCustomsDutyPerMt",
                                0
                            })
                        }
                    })
                };
                var profitandloss2 = datasetCollection.Aggregate<BsonDocument>(pipelinePandL2, aggregateOptions).FirstOrDefault();
                decimal _InrCustomsDutyPerMt = profitandloss2 == null ? 0 : profitandloss2.TryGetValue("InrCustomsDutyPerMt", out BsonValue inrCustomsDutyPerMtValue) &&
                                                   inrCustomsDutyPerMtValue.RawValue != null ? inrCustomsDutyPerMtValue.ToDecimal() : 0;
                decimal _USDToInr = salesList3.FirstOrDefault(item => item.Commodity == result.SourceCommodity.ToLower())?.USDToInr ?? 0;

                List<BsonDocument> pipelinePandL3 = new List<BsonDocument>
                {
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "DataJson.FormData.sourceContract", vesselIdString },
                        { "DataJson.FormData.location", subLocation },
                        { "DataSourceId", fxPaymentsFormId },
                        { "IsArchived", false },
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") },
                        { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") }
                    }),
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "location", subLocation.ToLower() },
                        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                    }),
                    new BsonDocument("$sort", new BsonDocument
                    {
                        { "date", -1 }
                    }),
                    new BsonDocument("$limit", 1),
                    new BsonDocument("$project", new BsonDocument { { "_id", 0 },
                        { "FxSettledUsd", "$DataJson.FormData.totalFxSettledValueInInr" },
                        { "FxContractUsd", "$DataJson.FormData.fxValuePendingRemittance" }
                    }),
                };
                var profitandloss3 = datasetCollection.Aggregate<BsonDocument>(pipelinePandL3, aggregateOptions).FirstOrDefault();
                decimal fxPaymentSettledUsd = profitandloss3 == null ? 0 : profitandloss3.TryGetValue("FxSettledUsd", out BsonValue fxPaymentSettledUsdValue) &&
                                                   fxPaymentSettledUsdValue.RawValue != null ? fxPaymentSettledUsdValue.ToDecimal() : 0;
                decimal fxPendingRemittance = profitandloss3 == null ? 0 : profitandloss3.TryGetValue("FxContractUsd", out BsonValue fxPaymentContractUsdValue) &&
                                                   fxPaymentContractUsdValue.RawValue != null ? fxPaymentContractUsdValue.ToDecimal() : 0;

                List<BsonDocument> pipelinePandL4 = new List<BsonDocument>
                {
                    new BsonDocument("$match", new BsonDocument
                    {
                        { "DataSourceId", locationMasterFormId },
                        { "IsArchived", false },
                        { "$expr", new BsonDocument
                            {
                                { "$eq", new BsonArray
                                    {
                                        new BsonDocument("$toLower", "$DataJson.FormData.location"),
                                        subLocation.ToLower()
                                    }
                                }
                            }
                        }
                    }),
                    new BsonDocument("$addFields", new BsonDocument
                    {
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.date") },
                    }),
                    new BsonDocument("$sort", new BsonDocument
                    {
                        { "date", -1 }
                    }),
                    new BsonDocument("$project", new BsonDocument
                    {
                        { "_id", 0 },
                        { "RefiningCost", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.refiningCost",
                                0
                            })
                        },
                        { "CnfCharges", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.cnfCharges",
                                0
                            })
                        }
                    })
                };
                var profitandloss4 = datasetCollection.Aggregate<BsonDocument>(pipelinePandL4, aggregateOptions).FirstOrDefault();
                decimal refiningCost = profitandloss4 == null ? 0 : profitandloss4.TryGetValue("RefiningCost", out BsonValue refiningCostValue) &&
                                                   refiningCostValue.RawValue != null ? refiningCostValue.ToDecimal() : 0;
                decimal cnfCharges = profitandloss4 == null ? 0 : profitandloss4.TryGetValue("CnfCharges", out BsonValue cnfChargesValue) &&
                                                   cnfChargesValue.RawValue != null ? cnfChargesValue.ToDecimal() : 0;
                 
                var _PandLList = CommodityGroups["PAndL"];

                foreach (var record in _PandLList)
                {
                    ProfitAndLossModel dataRecord = new ProfitAndLossModel();
                    decimal test = profitandlossList.Sum(x => x.RealisedCostYTD);
                    decimal realisedPandL = totalRecord.RealisedValue + profitandlossList.Sum(x => x.RealisedCostYTD);
                    decimal unRealisedPandL = totalRecord.UnRealisedValue + profitandlossList.Sum(x => x.UnRealisedCost);

                    if (!(inputModel?.ProductType?.ToLower() == "local"))
                    {
                        if (record.Name == "DUTY")
                        {
                            dataRecord.Cost = record.DisplayName;
                            dataRecord.RealisedCostYTD = customsDutyInr + (customsDutyQty * _InrCustomsDutyPerMt)
                                   + result.TotalSotQuantity == 0 ? 0 : customsDutyInr * (totalRecord.SoldQuantity / result.TotalSotQuantity);
                            dataRecord.UnRealisedCost = (-1) * (customsDutyInr + (customsDutyQty * _InrCustomsDutyPerMt)
                                   + result.TotalSotQuantity == 0 ? 0 : customsDutyInr * (totalRecord.AvailableBalance / result.TotalSotQuantity));
                            dataRecord.MtmRate = _InrCustomsDutyPerMt;
                        }
                        else if (record.Name == "FX-PAYMENT-PURCHASE")
                        {
                            dataRecord.Cost = record.DisplayName;
                            dataRecord.RealisedCostYTD = fxPaymentSettledUsd + (fxPendingRemittance * _USDToInr)
                                         + result.TotalContractQuantity == 0 ? 0 : fxPaymentSettledUsd * (totalRecord.SoldQuantity / result.TotalContractQuantity);
                            dataRecord.UnRealisedCost = (-1) * (fxPaymentSettledUsd + (fxPendingRemittance * _USDToInr)
                                         + result.TotalContractQuantity == 0 ? 0 : fxPaymentSettledUsd * (totalRecord.AvailableBalance / result.TotalContractQuantity));
                            dataRecord.MtmRate = _USDToInr;
                        }
                        else if (record.Name == "P&L-USD")
                        {
                            dataRecord.Cost = record.DisplayName;
                            dataRecord.RealisedCostYTD = _USDToInr == 0 ? 0 : (profitandlossList.FirstOrDefault(x => x.Cost == "P&L (INR)")?.RealisedCostYTD ?? 0) / _USDToInr;
                            dataRecord.UnRealisedCost = _USDToInr == 0 ? 0 : (profitandlossList.FirstOrDefault(x => x.Cost == "P&L (INR)")?.UnRealisedCost ?? 0) / _USDToInr;
                            dataRecord.IsBold = true;
                            result.PandLUSD = dataRecord.RealisedCostYTD + dataRecord.UnRealisedCost;
                            result.PandLRealisedUSD = dataRecord.RealisedCostYTD;
                            result.PandLUnRealisedUSD = dataRecord.UnRealisedCost;
                        }
                    }

                    if (record.Name == "REFINING-COST")
                    {
                        dataRecord.Cost = record.DisplayName;
                        dataRecord.RealisedCostYTD = (-1) * salesList2.FirstOrDefault(item => item.commodity == "RefiningCost")?.quantity ?? 0;
                    }
                    else if (record.Name == "CNF-CHARGES")
                    {
                        dataRecord.Cost = record.DisplayName;
                        //dataRecord.RealisedCostYTD = totalRecord.SoldQuantity * cnfCharges;
                        //dataRecord.UnRealisedCost = totalRecord.AvailableBalance * refiningCost;
                        dataRecord.UnRealisedCost = (-1) * cnfCharges * (finalQty - result.Utilization);
                    }
                    else if (record.Name == "PAYMENT-PURCHASE" && inputModel?.ProductType?.ToLower() == "local")
                    {
                        dataRecord.Cost = record.DisplayName;
                        dataRecord.RealisedCostYTD = (totalRecord.SoldQuantity / result.TotalContractQuantity) * valueInr;
                        dataRecord.UnRealisedCost = (-1) * (totalRecord.AvailableBalance / result.TotalContractQuantity) * valueInr;
                    }
                    else if (record.Name == "P&L-INR")
                    {
                        dataRecord.Cost = record.DisplayName;
                        dataRecord.RealisedCostYTD = realisedPandL;
                        dataRecord.UnRealisedCost = unRealisedPandL;
                        dataRecord.IsBold = true;
                        result.PandLINR = realisedPandL + unRealisedPandL;
                    }
                    //else
                    //{
                    //    dataRecord.Cost = record.DisplayName;
                    //    dataRecord.IsBackground = true;
                    //}
                    else if (record.Name == "P&L-USD" && isloop == true)
                    {
                        dataRecord.Cost = record.DisplayName;
                        dataRecord.RealisedCostYTD = _USDToInr == 0 ? 0 : (profitandlossList.FirstOrDefault(x => x.Cost == "P&L (INR)")?.RealisedCostYTD ?? 0) / _USDToInr;
                        dataRecord.UnRealisedCost = _USDToInr == 0 ? 0 : (profitandlossList.FirstOrDefault(x => x.Cost == "P&L (INR)")?.UnRealisedCost ?? 0) / _USDToInr;
                        dataRecord.IsBold = true;
                        result.PandLUSD = dataRecord.RealisedCostYTD + dataRecord.UnRealisedCost;
                        result.PandLRealisedUSD = dataRecord.RealisedCostYTD;
                        result.PandLUnRealisedUSD = dataRecord.UnRealisedCost;
                    }
                    dataRecord.TotalPAndL = dataRecord.RealisedCostYTD + dataRecord.UnRealisedCost + dataRecord.MtmRate;
                    if (!string.IsNullOrWhiteSpace(dataRecord.Cost))
                        profitandlossList.Add(dataRecord);
                }

                result.Productions = productionList;
                result.ProfitAndLosses = profitandlossList;
            }

            return result;
        }

        public List<PositionData> GetPositionsDashboard(PositionsDashboardInputModel inputModel, LoggedInContext loggedInContext, List<ValidationMessage> validationMessages)
        {
            LoggingManager.Info(string.Format(LoggingManagerAppConstants.LoggingManagerInfoValue, "GetVesselDashboard", "DataSetService"));
            List<PositionData> positionDataList = new List<PositionData>();
            IMongoCollection<DataSetOutputModel> datasetCollection = GetMongoCollectionObject<DataSetOutputModel>(MongoDBCollectionConstants.DataSet);
            var aggregateOptions = new AggregateOptions() { AllowDiskUse = true };

            DateTime fromDate = inputModel.FromDate ?? DateTime.UtcNow;
            DateTime toDate = inputModel.Todate ?? DateTime.UtcNow;
            DateTime toDate1 = toDate;
            int fromDay = fromDate.Day;
            int fromMonth = fromDate.Month;
            int fromYear = fromDate.Year;
            int toMonth = toDate.Month;
            int toYear = toDate.Year;
            toDate = new DateTime(toYear, toMonth, 1).AddMonths(1).AddDays(-1);
            int toDay = toDate.Day;
            string openingBalanceFormId = OpeningBalanceFormId.ToLower();
            var monthsList = new List<MonthYearOrder>();
            List<string> purchageFormIds = new List<string>(PurchaseFormIds.Values);
            List<string> salesFormIds = new List<string>(SalesFormIds.Values);
            List<string> dutyFormIds = new List<string>(CustomsDutyFormIds.Values);
            PurchaseFormIds.TryGetValue("Umiro-INDIA", out string umiroPurchageFormId);
            SalesFormIds.TryGetValue("Umiro-INDIA", out string umiroSalesFormId);
            umiroPurchageFormId = umiroPurchageFormId.ToLower();
            umiroSalesFormId = umiroSalesFormId.ToLower();
            DateTime featureFromDate = toDate.AddDays(1);
            DateTime featureToDate = featureFromDate.AddMonths(8).AddDays(-1);
            int featureFromMonth = featureFromDate.Month;
            int featureFromYear = featureFromDate.Year;
            int featureToMonth = featureToDate.Month;
            int featureToYear = featureToDate.Year;
            int featureToDay = featureToDate.Day;
            int todayYear = toDate1.Year;
            int todayMonth = toDate1.Month;
            int todayDay = toDate1.Day;
            int previousYear = toDate1.AddDays(-1).Year;
            int previousMonth = toDate1.AddDays(-1).Month;
            int previousDay = toDate1.AddDays(-1).Day;
            int pastYear = toDate.AddMonths(-1).Year;
            int pastMonth = toDate.AddMonths(-1).Month;
            int pastDay = toDate.AddMonths(-1).Day;
            string dailyRatesFormId = DailyRatesFormId.ToLower();

            for (int i = 1; i <= 7; i++)
            {
                var nextDate = toDate.AddMonths(i);
                var monthYearOrder = new MonthYearOrder
                {
                    Month = nextDate.Month,
                    Year = nextDate.Year,
                    Order = i
                };
                monthsList.Add(monthYearOrder);
            }

            List<BsonDocument> pipeline1 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", openingBalanceFormId },
                    { "IsArchived", false }
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "CompanyName", "$DataJson.FormData.entity" },
                    { "Commodity", "$DataJson.FormData.commodity" },
                    { "OpeningBalance", new BsonDocument("$ifNull", new BsonArray
                        {
                            "$DataJson.FormData.openingQuantityMt",
                            0
                        })
                    },
                    { "SGOpeningBalance", new BsonDocument("$ifNull", new BsonArray
                        {
                            "$DataJson.FormData.ytdPricedWithAaaMt",
                            0
                        })
                    }
                })
            };
            var positionSet1 = datasetCollection.Aggregate<BsonDocument>(pipeline1, aggregateOptions).ToList();
            List<PositionList1> positionList1 = BsonHelper.ConvertBsonDocumentListToModel<PositionList1>(positionSet1).ToList();

            List<BsonDocument> pipeline2 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(purchageFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "Source", "$DataJson.FormData.commodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.netPurchasesSinceJan2023",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryPeriod", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.contractDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroPurchageFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                        { "TodayTotalQty", new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) }
                    }
                )
            };
            var positionSet2 = datasetCollection.Aggregate<BsonDocument>(pipeline2, aggregateOptions).ToList();
            List<PositionList2> positionList2 = BsonHelper.ConvertBsonDocumentListToModel<PositionList2>(positionSet2).ToList();

            List<BsonDocument> pipeline3 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(purchageFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "Source", "$DataJson.FormData.commodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.netPurchasesSinceJan2023",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryPeriod", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.contractDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroPurchageFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(featureFromYear, featureFromMonth , 1))
                                             .Add("$lte", new DateTime(featureToYear, featureToMonth, featureToDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        {
                            "Year", new BsonDocument("$year", "$dateFilter")
                        },
                        {
                            "Month", new BsonDocument("$month", "$dateFilter")
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" },
                                { "Year", "$Year" },
                                { "Month", "$Month" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "Year", "$_id.Year" },
                        { "Month", "$_id.Month" },
                        { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) }
                    }
                )
            };
            var positionSet3 = datasetCollection.Aggregate<BsonDocument>(pipeline3, aggregateOptions).ToList();
            List<PositionList2> positionList3 = BsonHelper.ConvertBsonDocumentListToModel<PositionList2>(positionSet2).ToList();

            List<BsonDocument> pipeline4 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                        { "IsArchived", false },
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "ParentCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "Source", "$DataJson.FormData.commodity1" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.quantityMt2",
                                0
                            })
                        },
                        { "RealisedValue", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.valueInr1",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" },
                                { "ParentCommodity", "$ParentCommodity" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") },
                        { "RealisedValue", new BsonDocument("$sum", "$RealisedValue") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                        { "MonthTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                        { "TodayRealisedValue", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$year", "$dateFilter"), previousYear }),
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$month", "$dateFilter"), previousMonth }),
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), previousDay })
                                        }),
                                    "$RealisedValue",
                                    0
                                }
                            } })
                        },
                        { "MonthRealisedValue", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$year", "$dateFilter"), pastYear }),
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$month", "$dateFilter"), pastMonth }),
                                        }),
                                    "$RealisedValue",
                                    0
                                }
                            } })
                        }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "ParentCommodity", "$_id.ParentCommodity" },
                        { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                        { "RealisedValue", new BsonDocument("$round", new BsonArray { "$RealisedValue", 4 }) },
                        { "TodayTotalQty", new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) },
                        { "MonthTotalQty", new BsonDocument("$round", new BsonArray { "$MonthTotalQty", 4 }) },
                        { "MonthRealisedValue", new BsonDocument("$round", new BsonArray { "$MonthRealisedValue", 4 }) },
                        { "TodayRealisedValue", new BsonDocument("$round", new BsonArray { "$TodayRealisedValue", 4 }) }
                    }
                )
            };
            var positionSet4 = datasetCollection.Aggregate<BsonDocument>(pipeline4, aggregateOptions).ToList();
            List<PositionList3> positionList4 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet4).ToList();
            var ls = positionList4.Where(x => x.CompanyName == "ANA-INDIA" && x.ParentCommodity == "cpo").ToList();
            var sums = ls.Sum(x => x.RealisedValue);

            List<BsonDocument> pipeline5 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "ParentCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "Source", "$DataJson.FormData.commodity1" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.quantityMt2",
                                0
                            })
                        },
                        { "RealisedValue", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.valueInr1",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(featureFromYear, featureFromMonth , 1))
                                             .Add("$lte", new DateTime(featureToYear, featureToMonth, featureToDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        {
                            "Year", new BsonDocument("$year", "$dateFilter")
                        },
                        {
                            "Month", new BsonDocument("$month", "$dateFilter")
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "ParentCommodity", "$ParentCommodity" },
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" },
                                { "Year", "$Year" },
                                { "Month", "$Month" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") },
                        { "RealisedValue", new BsonDocument("$sum", "$RealisedValue") },
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "ParentCommodity", "$_id.ParentCommodity" },
                        { "Year", "$_id.Year" },
                        { "Month", "$_id.Month" },
                        { "TotalQty", 1 },
                        { "RealisedValue", 1 },
                    }
                )
            };
            var positionSet5 = datasetCollection.Aggregate<BsonDocument>(pipeline5, aggregateOptions).ToList();
            List<PositionList3> positionList5 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet5).ToList();

            List<BsonDocument> pipeline6 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "ParentCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "Source", "$DataJson.FormData.consumptionCommodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.consumedQuantityMt",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "ParentCommodity", "$ParentCommodity" },
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                        { "MonthTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "ParentCommodity", "$_id.ParentCommodity" },
                        { "TotalQty", 1 },
                        { "TodayTotalQty", 1 },
                        { "MonthTotalQty", 1 }
                    }
                )
            };
            var positionSet6 = datasetCollection.Aggregate<BsonDocument>(pipeline6, aggregateOptions).ToList();
            List<PositionList3> positionList6 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet6).ToList();

            List<BsonDocument> pipeline7 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "ParentCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "Source", "$DataJson.FormData.consumptionCommodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.consumedQuantityMt",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(featureFromYear, featureFromMonth , 1))
                                             .Add("$lte", new DateTime(featureToYear, featureToMonth, featureToDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        {
                            "Year", new BsonDocument("$year", "$dateFilter")
                        },
                        {
                            "Month", new BsonDocument("$month", "$dateFilter")
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Company", "$CompanyName" },
                                { "ParentCommodity", "$ParentCommodity" },
                                { "Source", "$Source" },
                                { "Year", "$Year" },
                                { "Month", "$Month" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "ParentCommodity", "$_id.ParentCommodity" },
                        { "Year", "$_id.Year" },
                        { "Month", "$_id.Month" },
                        { "TotalQty", 1 }
                    }
                )
            };
            var positionSet7 = datasetCollection.Aggregate<BsonDocument>(pipeline7, aggregateOptions).ToList();
            List<PositionList3> positionList7 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet7).ToList();

            positionList4.AddRange(positionList6);
            positionList5.AddRange(positionList7);

            List<BsonDocument> pipeline8 = new List<BsonDocument>
                {
                    new BsonDocument("$match",
                        new BsonDocument
                        {
                            { "DataSourceId", dailyRatesFormId },
                            { "IsArchived", false },
                            { "DataJson.FormData.sourceCommodity",new BsonDocument("$nin",new BsonArray{BsonNull.Value,""}) },
                            //{ "DataJson.FormData.derivedUsdRate",new BsonDocument("$nin",new BsonArray{BsonNull.Value,""}) },
                        }
                    ),
                    new BsonDocument("$addFields",
                        new BsonDocument
                        {
                            { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                            { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
                        }
                    ),
                    //new BsonDocument("$match",
                    //    new BsonDocument
                    //    {
                    //        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))) }
                    //    }
                    //),
                    new BsonDocument("$sort",
                        new BsonDocument("date", -1)
                    ),
                    new BsonDocument("$group",
                        new BsonDocument
                        {
                            { "_id", new BsonDocument
                                {
                                    { "commodity1", "$DataJson.FormData.commodity1" },
                                    { "location", "$location" } // Include location in the grouping
                                }
                            },
                            {"OldMTMRate", new BsonDocument("$push", "$DataJson.FormData.rateInr") },
                            { "OldDerivedUsdRate", new BsonDocument("$push", "$DataJson.FormData.derivedUsdRate") },
                            { "OldCnfRateUsd", new BsonDocument("$push", "$DataJson.FormData.cnfRateUsd") },
                            { "OldDerivedMdexRateUsd", new BsonDocument("$push", "$DataJson.FormData.derivedMdexRateUsd") },
                            { "OldSpotRateUsdMyr", new BsonDocument("$push", "$DataJson.FormData.spotRateUsdMyr") },
                            { "OldUSDToInr", new BsonDocument("$push", "$DataJson.FormData.usdToInr") },
                            { "MTMRate", new BsonDocument("$first", "$DataJson.FormData.rateInr") },
                            { "DerivedUsdRate", new BsonDocument("$first", "$DataJson.FormData.derivedUsdRate") },
                            { "CnfRateUsd", new BsonDocument("$first", "$DataJson.FormData.cnfRateUsd") },
                            { "DerivedMdexRateUsd", new BsonDocument("$first", "$DataJson.FormData.derivedMdexRateUsd") },
                            { "SpotRateUsdMyr", new BsonDocument("$first", "$DataJson.FormData.spotRateUsdMyr") },
                            { "USDToInr", new BsonDocument("$first", "$DataJson.FormData.usdToInr") },
                        }
                    ),
                    new BsonDocument("$project",
                        new BsonDocument
                        {
                            { "_id", 0 },
                            { "Commodity", new BsonDocument("$toLower", "$_id.commodity1") },
                            { "CompanyName", "$_id.location" },
                            { "MTMRate", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$MTMRate", 4 }), 0 }) },
                            { "DerivedUsdRate", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$DerivedUsdRate", 4 }), 0 }) },
                            { "CnfRateUsd", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$CnfRateUsd", 4 }), 0 }) },
                            { "SpotRateUsdMyr", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$SpotRateUsdMyr", 4 }), 0 }) },
                            { "DerivedMdexRateUsd", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$DerivedMdexRateUsd", 4 }), 0 }) },
                            { "USDToInr", new BsonDocument("$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$USDToInr", 4 }), 0 }) },
                            { "OldMTMRate", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldMTMRate", -2 }), 4 }) },
                            { "OldDerivedUsdRate", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldDerivedUsdRate", -2 }), 4 }) },
                            { "OldCnfRateUsd", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldCnfRateUsd", -2 }), 4 }) },
                            { "OldSpotRateUsdMyr", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldSpotRateUsdMyr", -2 }), 4 }) },
                            { "OldDerivedMdexRateUsd", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldDerivedMdexRateUsd", -2 }), 4 }) },
                            { "OldUSDToInr", new BsonDocument("$round", new BsonArray { new BsonDocument("$arrayElemAt", new BsonArray { "$OldUSDToInr", -2 }), 4 }) },
                        }
                    )
                };
            var positionSet8 = datasetCollection.Aggregate<BsonDocument>(pipeline8, aggregateOptions).ToList();
            List<PositionList7> positionList8 = BsonHelper.ConvertBsonDocumentListToModel<PositionList7>(positionSet8).ToList();

            //List<BsonDocument> pipeline9 = new List<BsonDocument>
            //    {
            //        new BsonDocument("$match",
            //            new BsonDocument
            //            {
            //                { "DataSourceId", dailyRatesFormId },
            //                { "IsArchived", false },
            //                { "DataJson.FormData.sourceCommodity",new BsonDocument("$nin",new BsonArray{BsonNull.Value,""}) },
            //                { "DataJson.FormData.derivedUsdRate",new BsonDocument("$nin",new BsonArray{BsonNull.Value,""}) },
            //            }
            //        ),
            //        new BsonDocument("$addFields",
            //            new BsonDocument
            //            {
            //                { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //                { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
            //            }
            //        ),
            //        //new BsonDocument("$match",
            //        //    new BsonDocument
            //        //    {
            //        //        { "date", new BsonDocument
            //        //            {
            //        //                { "$gt", BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) },
            //        //                { "$lte", BsonDateTime.Create(new DateTime(todayYear, todayMonth, todayDay, 23, 59, 59)) }
            //        //            }
            //        //        }
            //        //    }
            //        //),
            //        new BsonDocument("$sort",
            //            new BsonDocument("date", -1)
            //        ),
            //        new BsonDocument("$group",
            //            new BsonDocument
            //            {
            //                { "_id", new BsonDocument
            //                    {
            //                        { "commodity1", "$DataJson.FormData.commodity1" },
            //                        { "location", "$location" } // Include location in the grouping
            //                    }
            //                },
            //                { "MTMRate", new BsonDocument("$first", "$DataJson.FormData.rateInr") },
            //                { "DerivedUsdRate", new BsonDocument("$first", "$DataJson.FormData.derivedUsdRate") },
            //                { "CnfRateUsd", new BsonDocument("$first", "$DataJson.FormData.cnfRateUsd") },
            //                { "DerivedMdexRateUsd", new BsonDocument("$first", "$DataJson.FormData.derivedMdexRateUsd") },
            //                { "SpotRateUsdMyr", new BsonDocument("$first", "$DataJson.FormData.spotRateUsdMyr") },
            //                { "USDToInr", new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
            //            }
            //        ),
            //        new BsonDocument("$project",
            //            new BsonDocument
            //            {
            //                { "_id", 0 },
            //                { "Commodity", new BsonDocument("$toLower", "$_id.commodity1") },
            //                { "CompanyName", "$_id.location" },
            //                { "MTMRate", new BsonDocument("$ifNull", new BsonArray { "$MTMRate", 0 }) },
            //                { "DerivedUsdRate", new BsonDocument("$ifNull", new BsonArray { "$DerivedUsdRate", 0 }) },
            //                { "CnfRateUsd", new BsonDocument("$ifNull", new BsonArray { "$CnfRateUsd", 0 }) },
            //                { "SpotRateUsdMyr", new BsonDocument("$ifNull", new BsonArray { "$SpotRateUsdMyr", 0 }) },
            //                { "DerivedMdexRateUsd", new BsonDocument("$ifNull", new BsonArray { "$DerivedMdexRateUsd", 0 }) },
            //                { "USDToInr", new BsonDocument("$ifNull", new BsonArray { "$USDToInr", 0 }) }
            //            }
            //        )
            //    };
            //var positionSet9 = datasetCollection.Aggregate<BsonDocument>(pipeline9, aggregateOptions).ToList();
            //List<PositionList7> positionList9 = BsonHelper.ConvertBsonDocumentListToModel<PositionList7>(positionSet9).ToList();

            //P&L start
            //MTM for all commodities
            List<BsonDocument> pipeline10 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", dailyRatesFormId },
                        { "IsArchived", false },
                    }
                ),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
                    }
                ),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))) }
                    }
                ),
                new BsonDocument("$sort",
                    new BsonDocument("date", -1)
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "commodity1", "$DataJson.FormData.commodity1" },
                                { "location", "$location" }
                            }
                        },
                        { "MTMRate", new BsonDocument("$first", "$DataJson.FormData.rateInr") },
                        { "USDToInr", new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "Commodity", new BsonDocument("$toLower", "$_id.commodity1") },
                        { "CompanyName", "$_id.location" },
                        { "MTMRate", new BsonDocument("$ifNull", new BsonArray { "$MTMRate", 0 }) },
                        { "USDToInr", new BsonDocument("$ifNull", new BsonArray { "$USDToInr", 0 }) }
                    }
                )
            };
            var positionSet10 = datasetCollection.Aggregate<BsonDocument>(pipeline10, aggregateOptions).ToList();
            List<salesList3> positionList10 = BsonHelper.ConvertBsonDocumentListToModel<salesList3>(positionSet10).ToList();

            List<BsonDocument> pipeline11 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", dailyRatesFormId },
                        { "IsArchived", false },
                    }
                ),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                        { "date", new BsonDocument("$toDate", "$DataJson.FormData.entryDate") }
                    }
                ),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "date", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                    }
                ),
                new BsonDocument("$sort",
                    new BsonDocument("date", -1)
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "commodity1", "$DataJson.FormData.commodity1" },
                                { "location", "$location" }
                            }
                        },
                        { "MTMRate", new BsonDocument("$first", "$DataJson.FormData.rateInr") },
                        { "USDToInr", new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "Commodity", new BsonDocument("$toLower", "$_id.commodity1") },
                        { "CompanyName", "$_id.location" },
                        { "MTMRate", new BsonDocument("$ifNull", new BsonArray { "$MTMRate", 0 }) },
                        { "USDToInr", new BsonDocument("$ifNull", new BsonArray { "$USDToInr", 0 }) }
                    }
                )
            };
            var positionSet11 = datasetCollection.Aggregate<BsonDocument>(pipeline11, aggregateOptions).ToList();
            List<salesList3> positionList11 = BsonHelper.ConvertBsonDocumentListToModel<salesList3>(positionSet11).ToList();

            //Produced qty for all commodities
            List<BsonDocument> pipeline12 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                    { "IsArchived", false },
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0)) },
                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "CompanyName", "$CompanyName" },
                            { "SourceCommodity", "$sourceCommodity" }
                        }
                    },
                    { "cpo", new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
                    { "cpo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cpoTradingMt") },
                    { "rbd-palm-olein", new BsonDocument("$sum", "$DataJson.FormData.rbdOleinMt") },
                    { "refined-palm-oil", new BsonDocument("$sum", "$DataJson.FormData.rpoMt") },
                    { "stearin", new BsonDocument("$sum", "$DataJson.FormData.stearinMt") },
                    { "soft-stearin", new BsonDocument("$sum", "$DataJson.FormData.softStearinMt") },
                    { "hard-stearin", new BsonDocument("$sum", "$DataJson.FormData.hardStearinMt") },
                    { "pfad", new BsonDocument("$sum", "$DataJson.FormData.pfadMt") },
                    { "white-olein", new BsonDocument("$sum", "$DataJson.FormData.whiteOleinMt") },
                    { "calcium-soap", new BsonDocument("$sum", "$DataJson.FormData.calciumSoapMt") },
                    { "loss", new BsonDocument("$sum", "$DataJson.FormData.lossMt") },
                    { "rbd-palm-olein-trading", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinImportMt") },
                    { "rbd-palm-olein-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinTradingMt") },
                    { "refined-palm-oil-trading", new BsonDocument("$sum", "$DataJson.FormData.rpoMt1") },
                    { "refined-palm-oil-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rpoMt2") },
                    { "csfo", new BsonDocument("$sum", "$DataJson.FormData.csfoMt") },
                    { "csfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.csfoTradingMt") },
                    { "rsfo", new BsonDocument("$sum", "$DataJson.FormData.rsfoMt") },
                    { "sunflower-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.sunflowerFattyAcidMt") },
                    { "rsfo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsfoLocalMt") },
                    { "rsfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsfoTradingMt") },
                    { "crbo", new BsonDocument("$sum", "$DataJson.FormData.crboMt") },
                    { "crbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.crboTradingMt") },
                    { "rrbo", new BsonDocument("$sum", "$DataJson.FormData.rrboMt") },
                    { "rb-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.rbFattyAcidMt") },
                    { "rb-oil-wax", new BsonDocument("$sum", "$DataJson.FormData.rbOilWaxMt") },
                    { "rrbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rrboLocalMt") },
                    { "rrbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rrboTradingMt") },
                    { "cdsbo", new BsonDocument("$sum", "$DataJson.FormData.cdsboMt") },
                    { "cdsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cdsboTradingMt") },
                    { "rsbo", new BsonDocument("$sum", "$DataJson.FormData.rsboMt") },
                    { "soy-acid-oil", new BsonDocument("$sum", "$DataJson.FormData.soyAcidOilMt") },
                    { "rsbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsboLocalMt") },
                    { "rsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsboTradingMt") },
                    { "crude-glycerin", new BsonDocument("$sum", "$DataJson.FormData.crudeGlycerinMt") },
                    { "refined-glycerin", new BsonDocument("$sum", "$DataJson.FormData.refinedGycerinMt") },
                    { "refined-glycerin-trading", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinLocalMt1") },
                    { "refined-glycerin-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinTradingMt") }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "data", new BsonDocument("$map", new BsonDocument
                    {
                        { "input", new BsonDocument("$objectToArray", "$$ROOT") },
                        { "as", "item" },
                        { "in", new BsonDocument
                        {
                            { "k", "$$item.k" },
                            { "v", new BsonDocument("$cond", new BsonDocument
                            {
                                { "if", new BsonDocument("$gt", new BsonArray { "$$item.v", 0 }) },
                                { "then", "$$item.v" },
                                { "else", 0 }
                            })}
                        }}
                    })}
                }),
                new BsonDocument("$unwind", "$data"),
                new BsonDocument("$match", new BsonDocument("data.k", new BsonDocument("$ne", "_id"))),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "CompanyName", "$_id.CompanyName" },
                    { "ParentCommodity", "$_id.SourceCommodity" },
                    { "Commodity", "$data.k" },
                    { "TotalQty", new BsonDocument("$convert", new BsonDocument
                        {
                            { "input", "$data.v" },
                            { "to", "decimal" } // Convert to decimal data type
                        })
                    }
                })
            };
            var positionSet12 = datasetCollection.Aggregate<BsonDocument>(pipeline12, aggregateOptions).ToList();
            List<PositionList3> positionList12 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet12).ToList();

            List<BsonDocument> pipeline13 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                    { "IsArchived", false },
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) },
                    { "$lte", BsonDateTime.Create(new DateTime(todayYear, todayMonth, todayDay, 23, 59, 59)) }

                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "CompanyName", "$CompanyName" },
                            { "SourceCommodity", "$sourceCommodity" }
                        }
                    },
                    { "cpo", new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
                    { "cpo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cpoTradingMt") },
                    { "rbd-palm-olein", new BsonDocument("$sum", "$DataJson.FormData.rbdOleinMt") },
                    { "refined-palm-oil", new BsonDocument("$sum", "$DataJson.FormData.rpoMt") },
                    { "stearin", new BsonDocument("$sum", "$DataJson.FormData.stearinMt") },
                    { "soft-stearin", new BsonDocument("$sum", "$DataJson.FormData.softStearinMt") },
                    { "hard-stearin", new BsonDocument("$sum", "$DataJson.FormData.hardStearinMt") },
                    { "pfad", new BsonDocument("$sum", "$DataJson.FormData.pfadMt") },
                    { "white-olein", new BsonDocument("$sum", "$DataJson.FormData.whiteOleinMt") },
                    { "calcium-soap", new BsonDocument("$sum", "$DataJson.FormData.calciumSoapMt") },
                    { "loss", new BsonDocument("$sum", "$DataJson.FormData.lossMt") },
                    { "rbd-palm-olein-trading", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinImportMt") },
                    { "rbd-palm-olein-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinTradingMt") },
                    { "refined-palm-oil-trading", new BsonDocument("$sum", "$DataJson.FormData.rpoMt1") },
                    { "refined-palm-oil-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rpoMt2") },
                    { "csfo", new BsonDocument("$sum", "$DataJson.FormData.csfoMt") },
                    { "csfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.csfoTradingMt") },
                    { "rsfo", new BsonDocument("$sum", "$DataJson.FormData.rsfoMt") },
                    { "sunflower-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.sunflowerFattyAcidMt") },
                    { "rsfo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsfoLocalMt") },
                    { "rsfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsfoTradingMt") },
                    { "crbo", new BsonDocument("$sum", "$DataJson.FormData.crboMt") },
                    { "crbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.crboTradingMt") },
                    { "rrbo", new BsonDocument("$sum", "$DataJson.FormData.rrboMt") },
                    { "rb-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.rbFattyAcidMt") },
                    { "rb-oil-wax", new BsonDocument("$sum", "$DataJson.FormData.rbOilWaxMt") },
                    { "rrbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rrboLocalMt") },
                    { "rrbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rrboTradingMt") },
                    { "cdsbo", new BsonDocument("$sum", "$DataJson.FormData.cdsboMt") },
                    { "cdsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cdsboTradingMt") },
                    { "rsbo", new BsonDocument("$sum", "$DataJson.FormData.rsboMt") },
                    { "soy-acid-oil", new BsonDocument("$sum", "$DataJson.FormData.soyAcidOilMt") },
                    { "rsbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsboLocalMt") },
                    { "rsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsboTradingMt") },
                    { "crude-glycerin", new BsonDocument("$sum", "$DataJson.FormData.crudeGlycerinMt") },
                    { "refined-glycerin", new BsonDocument("$sum", "$DataJson.FormData.refinedGycerinMt") },
                    { "refined-glycerin-trading", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinLocalMt1") },
                    { "refined-glycerin-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinTradingMt") }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "data", new BsonDocument("$map", new BsonDocument
                    {
                        { "input", new BsonDocument("$objectToArray", "$$ROOT") },
                        { "as", "item" },
                        { "in", new BsonDocument
                        {
                            { "k", "$$item.k" },
                            { "v", new BsonDocument("$cond", new BsonDocument
                            {
                                { "if", new BsonDocument("$gt", new BsonArray { "$$item.v", 0 }) },
                                { "then", "$$item.v" },
                                { "else", 0 }
                            })}
                        }}
                    })}
                }),
                new BsonDocument("$unwind", "$data"),
                new BsonDocument("$match", new BsonDocument("data.k", new BsonDocument("$ne", "_id"))),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "CompanyName", "$_id.CompanyName" },
                    { "ParentCommodity", "$_id.SourceCommodity" },
                    { "Commodity", "$data.k" },
                    { "TotalQty", new BsonDocument("$convert", new BsonDocument
                        {
                            { "input", "$data.v" },
                            { "to", "decimal" } // Convert to decimal data type
                        })
                    }
                })
            };
            var positionSet13 = datasetCollection.Aggregate<BsonDocument>(pipeline13, aggregateOptions).ToList();
            List<PositionList3> positionList13 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet13).ToList();

            List<BsonDocument> pipeline14 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                    { "IsArchived", false },
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(toYear, toMonth, 1, 0, 0, 0)) },
                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, todayDay, 23, 59, 59)) }

                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "CompanyName", "$CompanyName" },
                            { "SourceCommodity", "$sourceCommodity" }
                        }
                    },
                    { "cpo", new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
                    { "cpo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cpoTradingMt") },
                    { "rbd-palm-olein", new BsonDocument("$sum", "$DataJson.FormData.rbdOleinMt") },
                    { "refined-palm-oil", new BsonDocument("$sum", "$DataJson.FormData.rpoMt") },
                    { "stearin", new BsonDocument("$sum", "$DataJson.FormData.stearinMt") },
                    { "soft-stearin", new BsonDocument("$sum", "$DataJson.FormData.softStearinMt") },
                    { "hard-stearin", new BsonDocument("$sum", "$DataJson.FormData.hardStearinMt") },
                    { "pfad", new BsonDocument("$sum", "$DataJson.FormData.pfadMt") },
                    { "white-olein", new BsonDocument("$sum", "$DataJson.FormData.whiteOleinMt") },
                    { "calcium-soap", new BsonDocument("$sum", "$DataJson.FormData.calciumSoapMt") },
                    { "loss", new BsonDocument("$sum", "$DataJson.FormData.lossMt") },
                    { "rbd-palm-olein-trading", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinImportMt") },
                    { "rbd-palm-olein-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rbdPalmoleinTradingMt") },
                    { "refined-palm-oil-trading", new BsonDocument("$sum", "$DataJson.FormData.rpoMt1") },
                    { "refined-palm-oil-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rpoMt2") },
                    { "csfo", new BsonDocument("$sum", "$DataJson.FormData.csfoMt") },
                    { "csfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.csfoTradingMt") },
                    { "rsfo", new BsonDocument("$sum", "$DataJson.FormData.rsfoMt") },
                    { "sunflower-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.sunflowerFattyAcidMt") },
                    { "rsfo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsfoLocalMt") },
                    { "rsfo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsfoTradingMt") },
                    { "crbo", new BsonDocument("$sum", "$DataJson.FormData.crboMt") },
                    { "crbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.crboTradingMt") },
                    { "rrbo", new BsonDocument("$sum", "$DataJson.FormData.rrboMt") },
                    { "rb-fatty-acid", new BsonDocument("$sum", "$DataJson.FormData.rbFattyAcidMt") },
                    { "rb-oil-wax", new BsonDocument("$sum", "$DataJson.FormData.rbOilWaxMt") },
                    { "rrbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rrboLocalMt") },
                    { "rrbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rrboTradingMt") },
                    { "cdsbo", new BsonDocument("$sum", "$DataJson.FormData.cdsboMt") },
                    { "cdsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.cdsboTradingMt") },
                    { "rsbo", new BsonDocument("$sum", "$DataJson.FormData.rsboMt") },
                    { "soy-acid-oil", new BsonDocument("$sum", "$DataJson.FormData.soyAcidOilMt") },
                    { "rsbo-trading", new BsonDocument("$sum", "$DataJson.FormData.rsboLocalMt") },
                    { "rsbo-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.rsboTradingMt") },
                    { "crude-glycerin", new BsonDocument("$sum", "$DataJson.FormData.crudeGlycerinMt") },
                    { "refined-glycerin", new BsonDocument("$sum", "$DataJson.FormData.refinedGycerinMt") },
                    { "refined-glycerin-trading", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinLocalMt1") },
                    { "refined-glycerin-ex-tank", new BsonDocument("$sum", "$DataJson.FormData.refinedGlycerinTradingMt") }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "data", new BsonDocument("$map", new BsonDocument
                    {
                        { "input", new BsonDocument("$objectToArray", "$$ROOT") },
                        { "as", "item" },
                        { "in", new BsonDocument
                        {
                            { "k", "$$item.k" },
                            { "v", new BsonDocument("$cond", new BsonDocument
                            {
                                { "if", new BsonDocument("$gt", new BsonArray { "$$item.v", 0 }) },
                                { "then", "$$item.v" },
                                { "else", 0 }
                            })}
                        }}
                    })}
                }),
                new BsonDocument("$unwind", "$data"),
                new BsonDocument("$match", new BsonDocument("data.k", new BsonDocument("$ne", "_id"))),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "CompanyName", "$_id.CompanyName" },
                    { "ParentCommodity", "$_id.SourceCommodity" },
                    { "Commodity", "$data.k" },
                    { "TotalQty", new BsonDocument("$convert", new BsonDocument
                        {
                            { "input", "$data.v" },
                            { "to", "decimal" } // Convert to decimal data type
                        })
                    }
                })
            };
            var positionSet14 = datasetCollection.Aggregate<BsonDocument>(pipeline14, aggregateOptions).ToList();
            List<PositionList3> positionList14 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet14).ToList();

            //overall consumed qty
            List<BsonDocument> pipeline15 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "ParentCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                        { "Source", "$DataJson.FormData.consumptionCommodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.consumedQuantityMt",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                        { "CompanyName",
                            new BsonDocument("$cond",
                                new BsonDocument
                                {
                                    { "if", new BsonDocument("$eq", new BsonArray
                                        {
                                            "$DataSourceId",
                                            umiroSalesFormId
                                        })
                                    },
                                    { "then", "UMIRO-INDIA" },
                                    { "else", "ANA-INDIA" }
                                })
                        }
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "Source", new BsonDocument("$nin", new BsonArray
                            {
                                "",
                                BsonNull.Value,
                                " "
                            })
                        },
                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Company", "$CompanyName" },
                                { "Source", "$Source" },
                                { "ParentCommodity", "$ParentCommodity" }
                            }
                        },
                        { "TotalQty", new BsonDocument("$sum", "$TotalQty") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                        { "MonthTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Source" },
                        { "ParentCommodity", "$_id.ParentCommodity" },
                        { "TotalQty", 1 },
                        { "TodayTotalQty", 1 },
                        { "MonthTotalQty", 1 },
                    }
                )
            };
            var positionSet15 = datasetCollection.Aggregate<BsonDocument>(pipeline15, aggregateOptions).ToList();
            List<PositionList3> positionList15 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet15).ToList();

            //overall duty for all grouping
            List<BsonDocument> pipeline16 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                    { "IsArchived", false },
                    { "DataJson.FormData.quantityMt2", new BsonDocument("$nin", new BsonArray { BsonNull.Value, "", " " }) }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "UniqueId", "$DataJson.FormData.ImportUniqueId" },
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$eq", new BsonArray { "$DataSourceId", umiroSalesFormId }),
                            "UMIRO-INDIA",
                            "ANA-INDIA"
                        })
                    },
                    { "fxFormId", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$eq", new BsonArray { "$DataSourceId", umiroSalesFormId }),
                            FXPaymentsUmiroFormId.ToLower(),
                            FXPaymentsANAFormId.ToLower()
                        })
                    },
                    { "consumedQty", new BsonDocument("$ifNull", new BsonArray
                        {
                            new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$ne", new BsonArray { "$DataJson.FormData.consumedQuantityMt", "" }),
                                new BsonDocument("$toDecimal", "$DataJson.FormData.consumedQuantityMt"),
                                0
                            }),
                            0
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument
                {
                    { "dateFilter", new BsonDocument
                        {
                            { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                            { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                        }
                    }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "producedQty", new BsonDocument("$add", new BsonArray
                        {
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.cpoMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.cpoTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rbdOleinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rpoMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.stearinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.softStearinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.hardStearinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.pfadMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.whiteOleinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.calciumSoapMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.lossMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rbdPalmoleinImportMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rbdPalmoleinTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rpoMt1", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rpoMt2", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.csfoMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.csfoTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsfoMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.sunflowerFattyAcidMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsfoLocalMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsfoTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.crboMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.crboTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rrboMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rbFattyAcidMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rbOilWaxMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rrboLocalMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rrboTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.cdsboMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.cdsboTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsboMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.soyAcidOilMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsboLocalMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.rsboTradingMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.crudeGlycerinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.refinedGycerinMt", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.refinedGlycerinLocalMt1", 0 }),
                            new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.refinedGlycerinTradingMt", 0 })
                        })
                    },
                    { "qty", new BsonDocument("$toDecimal", "$DataJson.FormData.quantityMt2") }
                }),
                new BsonDocument("$group", new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "CompanyName", "$CompanyName" },
                                { "SourceCommodity", "$sourceCommodity" },
                                { "UniqueId", "$UniqueId" }
                            }
                        },
                        { "Qty", new BsonDocument("$sum", "$qty") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$and", new BsonArray
                                {
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                }),
                                "$qty",
                                0
                            })
                        ) },
                        { "MonthTotalQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$and", new BsonArray
                                {
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth })
                                }),
                                "$qty",
                                0
                            })
                        ) },
                        { "Qty1", new BsonDocument("$sum", new BsonDocument("$subtract", new BsonArray
                            {
                                "$producedQty",
                                new BsonDocument("$add", new BsonArray { new BsonDocument("$ifNull", new BsonArray { "$qty", 0 }), new BsonDocument("$ifNull", new BsonArray { "$consumedQty", 0 }) })
                            })
                        ) },
                        { "TodayTotalQty1", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$and", new BsonArray
                                {
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                }),
                                new BsonDocument("$subtract", new BsonArray
                                {
                                    "$producedQty",
                                    new BsonDocument("$add", new BsonArray { new BsonDocument("$ifNull", new BsonArray { "$qty", 0 }), new BsonDocument("$ifNull", new BsonArray {"$consumedQty", 0 }) })
                                }),
                                0
                            })
                        ) },
                        { "MonthTotalQty1", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$and", new BsonArray
                                {
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                    new BsonDocument("$eq", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth })
                                }),
                                new BsonDocument("$subtract", new BsonArray
                                {
                                    "$producedQty",
                                    new BsonDocument("$add", new BsonArray { new BsonDocument("$ifNull", new BsonArray { "$qty", 0 }), new BsonDocument("$ifNull", new BsonArray {"$consumedQty", 0 }) })
                                }),
                                0
                            })
                        ) }
                    }),
                new BsonDocument("$lookup", new BsonDocument
                    {
                        { "from", MongoDBCollectionConstants.DataSet },
                        { "localField", "_id.UniqueId" },
                        { "foreignField", "DataJson.FormData.selectSourceContract" },
                        { "pipeline", new BsonArray
                            {
                                new BsonDocument("$addFields", new BsonDocument
                                {
                                    { "contractDate", new BsonDocument("$toDate", new BsonDocument("$dateFromString", new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }))
                                    }
                                }),
                                new BsonDocument("$match", new BsonDocument
                                {
                                    { "DataSourceId", new BsonDocument("$in", new BsonArray(dutyFormIds)) },
                                    { "IsArchived", false },
                                    { "contractDate", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                                }),
                                new BsonDocument("$sort", new BsonDocument
                                {
                                    { "contractDate", -1 }
                                }),
                                new BsonDocument("$limit", 1),
                                new BsonDocument("$project", new BsonDocument
                                {
                                    { "_id", 0 },
                                    { "DutyInr", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.totalCustomsDutyOfContractInr", 0 }) }
                                })
                            }
                        },
                        { "as", "customsDuty" }
                    }),
                new BsonDocument("$lookup", new BsonDocument
                    {
                        { "from", MongoDBCollectionConstants.DataSet },
                        { "let", new BsonDocument
                            {
                                { "location", new BsonDocument("$toLower", "$DataJson.FormData.location") },
                                { "fxFormId", "$DataSourceId" }
                            }
                        },
                        { "pipeline", new BsonArray
                            {
                                new BsonDocument("$match", new BsonDocument
                                    {
                                        { "$expr", new BsonDocument("$and", new BsonArray
                                            {
                                                new BsonDocument("$eq", new BsonArray { "$location", "$$location" }),
                                                new BsonDocument("$gte", new BsonArray { "$fxFormId", "$$fxFormId" })
                                            })
                                        }
                                    }
                                ),
                                new BsonDocument("$addFields", new BsonDocument
                                {
                                    { "contractDate", new BsonDocument("$toDate", new BsonDocument("$dateFromString", new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }))
                                    }
                                }),
                                new BsonDocument("$match", new BsonDocument
                                {
                                    { "DataSourceId", new BsonDocument("$in", new BsonArray{FXPaymentsANAFormId.ToLower(),FXPaymentsUmiroFormId.ToLower() }) },
                                    { "IsArchived", false },
                                    { "contractDate", new BsonDocument("$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))) }
                                }),
                                new BsonDocument("$sort", new BsonDocument
                                {
                                    { "contractDate", -1 }
                                }),
                                new BsonDocument("$limit", 1),
                                new BsonDocument("$project", new BsonDocument
                                {
                                    { "_id", 0 },
                                    { "FxSettled", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.totalFxSettledInUsd", 0 }) },
                                    { "ContractFx", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.totalContractFxValueUsd", 0 }) }
                                })
                            }
                        },
                        { "as", "fxData" }
                    }),
                new BsonDocument("$lookup", new BsonDocument
                    {
                        { "from", MongoDBCollectionConstants.DataSet },
                        { "localField", "_id.UniqueId" },
                        { "foreignField", "DataJson.FormData.uniqueIdImportLocal" },
                        { "pipeline", new BsonArray
                            {
                                new BsonDocument("$match", new BsonDocument
                                {
                                    { "DataSourceId", new BsonDocument("$in", new BsonArray(purchageFormIds)) },
                                    { "IsArchived", false }
                                }),
                                new BsonDocument("$project", new BsonDocument
                                {
                                    { "_id", 0 },
                                    { "ContractQty", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.contractQuantityMt", 0 }) }
                                })
                            }
                        },
                        { "as", "purchage" }
                    }),
                new BsonDocument("$addFields", new BsonDocument
                    {
                        { "DutyInr", new BsonDocument("$arrayElemAt", new BsonArray { "$customsDuty.DutyInr", 0 }) },
                        { "ContractQty", new BsonDocument("$arrayElemAt", new BsonArray { "$purchage.ContractQty", 0 }) },
                        { "FxSettled", new BsonDocument("$arrayElemAt", new BsonArray { "$fxData.FxSettled", 0 }) },
                        { "ContractFx", new BsonDocument("$arrayElemAt", new BsonArray { "$fxData.ContractFx", 0 }) }
                    }),
                new BsonDocument("$group", new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "CompanyName", "$_id.CompanyName" },
                                { "SourceCommodity", "$_id.SourceCommodity" }
                            }
                        },
                        { "RelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$Qty", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "TodayRelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$TodayTotalQty", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "MonthRelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$MonthTotalQty", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "UnRelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$Qty1", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "TodayUnRelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$TodayTotalQty1", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "MonthUnRelDuty", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$MonthTotalQty1", "$ContractQty" }),
                                "$DutyInr"
                            })
                        ) },
                        { "RelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$Qty", "$ContractQty" }),
                                "$FxSettled"
                            })
                        ) },
                        { "TodayRelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$TodayTotalQty", "$ContractQty" }),
                                "$FxSettled"
                            })
                        ) },
                        { "MonthRelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$MonthTotalQty", "$ContractQty" }),
                                "$FxSettled"
                            })
                        ) },
                        { "UnRelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$Qty1", "$ContractQty" }),
                                "$ContractFx"
                            })
                        ) },
                        { "TodayUnRelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$TodayTotalQty1", "$ContractQty" }),
                                "$ContractFx"
                            })
                        ) },
                        { "MonthUnRelFX", new BsonDocument("$sum", new BsonDocument("$multiply", new BsonArray
                            {
                                new BsonDocument("$divide", new BsonArray { "$MonthTotalQty1", "$ContractQty" }),
                                "$ContractFx"
                            })
                        ) }
                    }),
                new BsonDocument("$project", new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.CompanyName" },
                        { "SourceCommodity", "$_id.SourceCommodity" },
                        { "RelDuty", new BsonDocument("$round", new BsonArray { "$RelDuty", 4 }) },
                        { "TodayRelDuty", new BsonDocument("$round", new BsonArray { "$TodayRelDuty", 4 }) },
                        { "MonthRelDuty", new BsonDocument("$round", new BsonArray { "$MonthRelDuty", 4 }) },
                        { "UnRelDuty", new BsonDocument("$round", new BsonArray { "$UnRelDuty", 4 }) },
                        { "TodayUnRelDuty", new BsonDocument("$round", new BsonArray { "$TodayUnRelDuty", 4 }) },
                        { "MonthUnRelDuty", new BsonDocument("$round", new BsonArray { "$MonthUnRelDuty", 4 }) },
                        { "RelFX", new BsonDocument("$round", new BsonArray { "$RelFX", 4 }) },
                        { "TodayRelFX",new BsonDocument("$round", new BsonArray { "$TodayRelFX", 4 }) },
                        { "MonthRelFX", new BsonDocument("$round", new BsonArray { "$MonthRelFX", 4 }) },
                        { "UnRelFX", new BsonDocument("$round", new BsonArray { "$UnRelFX", 4 }) },
                        { "TodayUnRelFX", new BsonDocument("$round", new BsonArray { "$TodayUnRelFX", 4 }) },
                        { "MonthUnRelFX", new BsonDocument("$round", new BsonArray { "$MonthUnRelFX", 4 }) }
                    })
            };
            var positionSet16 = datasetCollection.Aggregate<BsonDocument>(pipeline16, aggregateOptions).ToList();
            List<PositionList4> positionList16 = BsonHelper.ConvertBsonDocumentListToModel<PositionList4>(positionSet16).ToList();

            //Refining cost calculations from sales form
            List<BsonDocument> pipeline17 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds) ) },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$cond", new BsonDocument
                        {
                            { "if", new BsonDocument("$eq", new BsonArray
                                {
                                    "$DataSourceId",
                                    umiroSalesFormId
                                })
                            },
                            { "then", "UMIRO-INDIA" },
                            { "else", "ANA-INDIA" }
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument
                {
                    { "dateFilter", new BsonDocument
                        {
                            { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                            { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                        }
                    }
                }),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "SourceCommodity", "$sourceCommodity" },
                            { "CompanyName", "$CompanyName" }
                        }
                    },
                    { "RefiningCost", new BsonDocument("$sum", "$DataJson.FormData.expectedRefiningCostInr1") },
                    { "TodayRefiningCost", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"), previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"), previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"), previousDay
                                })
                            }),
                            "$DataJson.FormData.expectedRefiningCostInr1",
                            0
                        })
                    )},
                    { "MonthRefiningCost", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"), pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                })
                            }),
                            "$DataJson.FormData.expectedRefiningCostInr1",
                            0
                        })
                    )}
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 }, // To exclude the _id field from the final output
                    { "SourceCommodity", "$_id.SourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "RefiningCost", new BsonDocument("$round", new BsonArray { "$RefiningCost", 4 }) },
                    { "TodayRefiningCost", new BsonDocument("$round", new BsonArray { "$TodayRefiningCost", 4 }) },
                    { "MonthRefiningCost", new BsonDocument("$round", new BsonArray { "$MonthRefiningCost", 4 }) }
                })
            };
            var positionSet17 = datasetCollection.Aggregate<BsonDocument>(pipeline17, aggregateOptions).ToList();
            List<PositionList5> positionList17 = BsonHelper.ConvertBsonDocumentListToModel<PositionList5>(positionSet17).ToList();

            //CnfCharges calculations from sales form
            List<BsonDocument> pipeline18 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray(salesFormIds)) },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$cond", new BsonDocument
                        {
                            { "if", new BsonDocument("$eq", new BsonArray
                                {
                                    "$DataSourceId",
                                    umiroSalesFormId
                                })
                            },
                            { "then", "UMIRO-INDIA" },
                            { "else", "ANA-INDIA" }
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument
                {
                    { "dateFilter", new BsonDocument
                        {
                            { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                            { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                        }
                    }
                }),
                new BsonDocument("$sort", new BsonDocument
                {
                    { "dateFilter", -1 }
                }),
                new BsonDocument("$match", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$nin", new BsonArray { "", BsonNull.Value, " " }) }
                }),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "SourceCommodity", "$sourceCommodity" },
                            { "CompanyName", "$CompanyName" },
                            { "UniqueId", "$DataJson.FormData.ImportUniqueId" }
                        }
                    },
                    { "dateFilter", new BsonDocument("$first", "$dateFilter") },
                    { "RefiningCost", new BsonDocument("$first", "$DataJson.FormData.expectedCnfCharges") }
                }),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "SourceCommodity", "$_id.SourceCommodity" },
                            { "CompanyName", "$_id.CompanyName" }
                        }
                    },
                    { "RefiningCost", new BsonDocument("$sum", "$RefiningCost") },
                    { "TodayRefiningCost", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            "$RefiningCost",
                            0
                        })
                    )},
                    { "MonthRefiningCost", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                })
                            }),
                            "$RefiningCost",
                            0
                        })
                    )}
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 }, // To exclude the _id field from the final output
                    { "SourceCommodity", "$_id.SourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "RefiningCost", new BsonDocument("$round", new BsonArray { "$RefiningCost", 4 }) },
                    { "TodayRefiningCost", new BsonDocument("$round", new BsonArray { "$TodayRefiningCost", 4 }) },
                    { "MonthRefiningCost", new BsonDocument("$round", new BsonArray { "$MonthRefiningCost", 4 }) }
                })
            };
            var positionSet18 = datasetCollection.Aggregate<BsonDocument>(pipeline18, aggregateOptions).ToList();
            List<PositionList5> positionList18 = BsonHelper.ConvertBsonDocumentListToModel<PositionList5>(positionSet18).ToList();

            List<BsonDocument> pipeline19 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray{ UmiroAdjFormId.ToLower(), ANAAdjFormId.ToLower() }) },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "ProductGroup", new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
                    { "dateFilter", new BsonDocument("$toDate", "$DataJson.FormData.tradeDate") },
                    { "CompanyName", new BsonDocument("$cond", new BsonDocument
                        {
                            { "if", new BsonDocument("$eq", new BsonArray
                                {
                                    "$DataSourceId",
                                    UmiroAdjFormId.ToLower()
                                })
                            },
                            { "then", "UMIRO-INDIA" },
                            { "else", "ANA-INDIA" }
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "ProductGroup", "$ProductGroup" },
                            { "CompanyName", "$CompanyName" }
                        }
                    },
                    { "Cancellation", new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") },
                    { "TodayCancellation", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$eq", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            "$DataJson.FormData.quantityMt2",
                            0
                        })
                    )}
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "ProductGroup", "$_id.ProductGroup" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "Cancellation", new BsonDocument("$round", new BsonArray { "$Cancellation", 4 }) },
                    { "TodayCancellation", new BsonDocument("$round", new BsonArray { "$TodayCancellation", 4 }) }
                })
            };
            var positionSet19 = datasetCollection.Aggregate<BsonDocument>(pipeline19, aggregateOptions).ToList();
            List<PositionList6> positionList19 = BsonHelper.ConvertBsonDocumentListToModel<PositionList6>(positionSet19).ToList();

            List<BsonDocument> pipeline20 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            FO_BuyFormId.ToLower(),
                            FO_SellFormId.ToLower()
                        })
                    },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", new BsonDocument("$concat", new BsonArray
                        {
                            "$DataJson.FormData.exchange",
                            new BsonString("-"),
                            "$DataJson.FormData.commodity"
                        })
                    ) },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryMonth", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$toLower", "$DataJson.FormData.productGroup") },
                    { "quantity", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$eq", new BsonArray
                            {
                                "$DataSourceId", FO_SellFormId.ToLower()
                            }),
                            new BsonDocument("$multiply", new BsonArray
                            {
                                "$DataJson.FormData.quantityInMt", -1
                            }),
                            "$DataJson.FormData.quantityInMt"
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "SourceCommodity", "$sourceCommodity" },
                            { "CompanyName", "$CompanyName" }
                        }
                    },
                    { "TotalQty", new BsonDocument("$sum", "$quantity") },
                    { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            "$quantity",
                            0
                        })
                    ) }
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "ParentCommodity", "$_id.SourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                    { "TodayTotalQty", new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) }
                })
            };
            var positionSet20 = datasetCollection.Aggregate<BsonDocument>(pipeline20, aggregateOptions).ToList();
            List<PositionList3> positionList20 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet20).ToList();

            List<BsonDocument> pipeline21 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            FO_BuyFormId.ToLower(),
                            FO_SellFormId.ToLower()
                        })
                    },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", new BsonDocument("$concat", new BsonArray
                        {
                            "$DataJson.FormData.exchange",
                            new BsonString("-"),
                            "$DataJson.FormData.commodity"
                        })
                    ) },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryMonth", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$toLower", "$DataJson.FormData.productGroup") },
                    { "quantity", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$eq", new BsonArray
                            {
                                "$DataSourceId", FO_SellFormId.ToLower()
                            }),
                            new BsonDocument("$multiply", new BsonArray
                            {
                                "$DataJson.FormData.quantityInMt", -1
                            }),
                            "$DataJson.FormData.quantityInMt"
                        })
                    }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(featureFromYear, featureFromMonth, 1)) },
                    { "$lte", BsonDateTime.Create(new DateTime(featureToYear, featureToMonth, featureToDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "SourceCommodity", "$sourceCommodity" },
                            { "CompanyName", "$CompanyName" },
                            { "Year", new BsonDocument("$year", "$dateFilter") },
                            { "Month", new BsonDocument("$month", "$dateFilter") }
                        }
                    },
                    { "TotalQty", new BsonDocument("$sum", "$quantity") },
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "ParentCommodity", "$_id.SourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "TotalQty", 1 },
                    { "Year", "$_id.Year" },
                    { "Month", "$_id.Month" },
                })
            };
            var positionSet21 = datasetCollection.Aggregate<BsonDocument>(pipeline21, aggregateOptions).ToList();
            List<PositionList3> positionList21 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet21).ToList();

            //Paper&feature - unrealised >> sell form  part && - realised >> sell form  part
            List<BsonDocument> pipeline22 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            FO_SellFormId.ToLower()
                        })
                    },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", new BsonDocument("$concat", new BsonArray
                        {
                            "$DataJson.FormData.exchange",
                            new BsonString("-"),
                            "$DataJson.FormData.commodity"
                        })
                    ) },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryMonth", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$toLower", "$DataJson.FormData.productGroup") }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(todayYear, todayMonth, todayDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "CompanyName", "$CompanyName" },
                            { "sourceCommodity", "$sourceCommodity" }
                        }
                    },
                    { "UnRealizedValue", new BsonDocument("$sum", "$DataJson.FormData.unRealizedValueMyr") },
                    { "TodayUnRealizedValue", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.unRealizedValueMyr",
                            0
                        })
                    )},
                    { "MonthUnRealizedValue", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.unRealizedValueMyr",
                            0
                        })
                    )},
                    { "UnRealizedQty", new BsonDocument("$sum", "$DataJson.FormData.unrealizedQuantityMt") },
                    { "TodayUnRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.unrealizedQuantityMt",
                            0
                        })
                    )},
                    { "MonthUnRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.unrealizedQuantityMt",
                            0
                        })
                    )},
                    { "RealizedQty", new BsonDocument("$sum", "$DataJson.FormData.realisedPnl") },
                    { "TodayRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.realisedPnl",
                            0
                        })
                    )},
                    { "MonthRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.realisedPnl",
                            0
                        })
                    )}
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "SourceCommodity", "$_id.sourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "UnRealizedValue", new BsonDocument("$round", new BsonArray { "$UnRealizedValue", 4 }) },
                    { "TodayUnRealizedValue", new BsonDocument("$round", new BsonArray { "$TodayUnRealizedValue", 4 }) },
                    { "MonthUnRealizedValue", new BsonDocument("$round", new BsonArray { "$MonthUnRealizedValue", 4 }) },
                    { "UnRealizedQty", new BsonDocument("$round", new BsonArray { "$UnRealizedQty", 4 }) },
                    { "TodayUnRealizedQty", new BsonDocument("$round", new BsonArray { "$TodayUnRealizedQty", 4 }) },
                    { "MonthUnRealizedQty", new BsonDocument("$round", new BsonArray { "$MonthUnRealizedQty", 4 }) },
                    { "RealizedQty", new BsonDocument("$round", new BsonArray { "$RealizedQty", 4 }) },
                    { "TodayRealizedQty", new BsonDocument("$round", new BsonArray { "$TodayRealizedQty", 4 }) },
                    { "MonthRealizedQty", new BsonDocument("$round", new BsonArray { "$MonthRealizedQty", 4 }) }
                })
            };
            var positionSet22 = datasetCollection.Aggregate<BsonDocument>(pipeline22, aggregateOptions).ToList();
            List<PositionList8> positionList22 = BsonHelper.ConvertBsonDocumentListToModel<PositionList8>(positionSet22).ToList();

            //Paper&feature - unrealised >> cnfRateUsd
            List<BsonDocument> pipeline23 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            FO_BuyFormId.ToLower()
                        })
                    },
                    { "IsArchived", false }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "sourceCommodity", new BsonDocument("$toLower", new BsonDocument("$concat", new BsonArray
                        {
                            "$DataJson.FormData.exchange",
                            new BsonString("-"),
                            "$DataJson.FormData.commodity"
                        })
                    ) },
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryMonth", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.entryDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "CompanyName", new BsonDocument("$toLower", "$DataJson.FormData.productGroup") }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(todayYear, todayMonth, todayDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", new BsonDocument
                        {
                            { "CompanyName", "$CompanyName" },
                            { "sourceCommodity", "$sourceCommodity" }
                        }
                    },
                    { "UnRealizedValue", new BsonDocument("$sum", "$DataJson.FormData.quantityInMt") },
                    { "TodayUnRealizedValue", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.quantityInMt",
                            0
                        })
                    )},
                    { "MonthUnRealizedValue", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.quantityInMt",
                            0
                        })
                    )},
                    { "UnRealizedQty", new BsonDocument("$sum", "$DataJson.FormData.boughtValue") },
                    { "TodayUnRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.boughtValue",
                            0
                        })
                    )},
                    { "MonthUnRealizedQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.boughtValue",
                            0
                        })
                    )}
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "SourceCommodity", "$_id.sourceCommodity" },
                    { "CompanyName", "$_id.CompanyName" },
                    { "UnRealizedValue", new BsonDocument("$round", new BsonArray { "$UnRealizedValue", 4 }) },
                    { "TodayUnRealizedValue", new BsonDocument("$round", new BsonArray { "$TodayUnRealizedValue", 4 }) },
                    { "MonthUnRealizedValue", new BsonDocument("$round", new BsonArray { "$MonthUnRealizedValue", 4 }) },
                    { "UnRealizedQty", new BsonDocument("$round", new BsonArray { "$UnRealizedQty", 4 }) },
                    { "TodayUnRealizedQty", new BsonDocument("$round", new BsonArray { "$TodayUnRealizedQty", 4 }) },
                    { "MonthUnRealizedQty", new BsonDocument("$round", new BsonArray { "$MonthUnRealizedQty", 4 }) }
                })
            };
            var positionSet23 = datasetCollection.Aggregate<BsonDocument>(pipeline23, aggregateOptions).ToList();
            List<PositionList8> positionList23 = BsonHelper.ConvertBsonDocumentListToModel<PositionList8>(positionSet23).ToList();

            //SG-ana YTD & P&L
            List<BsonDocument> pipeline24 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            SGVCFormId.ToLower(),
                            SGTBAPFormId.ToLower()
                        })
                    },
                    { "IsArchived", false },
                    { "DataJson.FormData.tradeDate", new BsonDocument("$nin", new BsonArray { "", BsonNull.Value, " " }) }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryPeriod", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(todayYear, todayMonth, todayDay, 23, 59, 59)) }
                })),
                new BsonDocument("$addFields",
                                new BsonDocument
                                    {
                                        { "adjTotalPricedQuantityMtOrimu",
                                new BsonDocument("$ifNull",
                                new BsonArray
                                            {
                                                "$DataJson.FormData.adjTotalPricedQuantityMtOrimu",
                                                0
                                            }) },
                                        { "tradeTicketQuantityMt",
                                new BsonDocument("$ifNull",
                                new BsonArray
                                            {
                                                "$DataJson.FormData.tradeTicketQuantityMt",
                                                0
                                            }) }
                                    }),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", "$DataJson.FormData.commodity" },
                    { "TotalQty", new BsonDocument
                        {
                            { "$sum", new BsonDocument
                                {
                                    { "$add", new BsonArray
                                        {
                                            new BsonDocument("$toDecimal", "$adjTotalPricedQuantityMtOrimu"),
                                            new BsonDocument("$toDecimal", "$tradeTicketQuantityMt")
                                        }
                                    }
                                }
                            }
                        }
                    },
                    { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            new BsonDocument
                            {
                                { "$sum", new BsonDocument
                                    {
                                        { "$add", new BsonArray
                                            {
                                                new BsonDocument("$toDecimal", "$DataJson.FormData.adjTotalPricedQuantityMtOrimu"),
                                                new BsonDocument("$toDecimal", "$DataJson.FormData.tradeTicketQuantityMt")
                                            }
                                        }
                                    }
                                }
                            },
                            0
                        })
                    )},
                    { "UnRealized", new BsonDocument("$sum", "$DataJson.FormData.unRealizedPLUsd") },
                    { "TodayUnRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.unRealizedPLUsd",
                            0
                        })
                    )},
                    { "MonthUnRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.unRealizedPLUsd",
                            0
                        })
                    )},
                    { "Realized", new BsonDocument("$sum", "$DataJson.FormData.adjRealizedPLOrimuUsd") },
                    { "TodayRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),previousYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),previousMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),previousDay
                                })
                            }),
                            "$DataJson.FormData.adjRealizedPLOrimuUsd",
                            0
                        })
                    )},
                    { "MonthRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),pastYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),pastMonth
                                }),
                            }),
                            "$DataJson.FormData.adjRealizedPLOrimuUsd",
                            0
                        })
                    )},
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "SourceCommodity", "$_id" },
                    { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                    { "TodayTotalQty" , new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) },
                    { "UnRealized", new BsonDocument("$round", new BsonArray { "$UnRealized", 4 }) },
                    { "TodayUnRealized", new BsonDocument("$round", new BsonArray { "$TodayUnRealized", 4 }) },
                    { "MonthUnRealized", new BsonDocument("$round", new BsonArray { "$MonthUnRealized", 4 }) },
                    { "Realized", new BsonDocument("$round", new BsonArray { "$Realized", 4 }) },
                    { "TodayRealized", new BsonDocument("$round", new BsonArray { "$TodayRealized", 4 }) },
                    { "MonthRealized", new BsonDocument("$round", new BsonArray { "$MonthRealized", 4 }) }
                })
            };
            var positionSet24 = datasetCollection.Aggregate<BsonDocument>(pipeline24, aggregateOptions).ToList();
            List<PositionList9> positionList24 = BsonHelper.ConvertBsonDocumentListToModel<PositionList9>(positionSet24).ToList();

            //Orimu YTD
            List<BsonDocument> pipeline25 = new List<BsonDocument>
            {
                new BsonDocument("$match", new BsonDocument
                {
                    { "DataSourceId", new BsonDocument("$in", new BsonArray
                        {
                            SGVCFormId.ToLower(),
                            OrimuTBAPFormId.ToLower()
                        })
                    },
                    { "IsArchived", false },
                    { "DataJson.FormData.tradeDate", new BsonDocument("$nin", new BsonArray { "", BsonNull.Value, " " }) }
                }),
                new BsonDocument("$addFields", new BsonDocument
                {
                    { "dateFilter",
                        new BsonDocument("$dateFromString",
                            new BsonDocument
                            {
                                { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryPeriod", "0" }) },
                                { "onError",
                                    new BsonDocument("$dateFromString",
                                        new BsonDocument
                                        {
                                            { "dateString", "$DataJson.FormData.tradeDate" },
                                            { "onError", BsonNull.Value }
                                        }
                                    )
                                }
                            }
                        )
                    },
                    { "orimutotalPricedquantity", new BsonDocument("$ifNull",
                        new BsonArray
                                    {
                                        "$DataJson.FormData.orimutotalPricedquantity",
                                        0
                                    }) },
                     { "tradeTicketQuantityMt", new BsonDocument("$ifNull",
                                new BsonArray
                                            {
                                                "$DataJson.FormData.tradeTicketQuantityMt",
                                                0
                                            }) }
                }),
                new BsonDocument("$match", new BsonDocument("dateFilter", new BsonDocument
                {
                    { "$gte", BsonDateTime.Create(new DateTime(fromYear, fromMonth, fromDay)) },
                    { "$lte", BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
                })),
                new BsonDocument("$group", new BsonDocument
                {
                    { "_id", "$DataJson.FormData.commodity" },
                    { "TotalQty", new BsonDocument
                        {
                            { "$sum", new BsonDocument
                                {
                                    { "$add", new BsonArray
                                        {
                                            new BsonDocument("$toDecimal", "$orimutotalPricedquantity"),
                                            new BsonDocument("$toDecimal", "$tradeTicketQuantityMt")
                                        }
                                    }
                                }
                            }
                        }
                    },
                    { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            new BsonDocument
                            {
                                { "$sum", new BsonDocument
                                    {
                                        { "$add", new BsonArray
                                            {
                                                new BsonDocument("$toDecimal", "$DataJson.FormData.orimutotalPricedquantity"),
                                                new BsonDocument("$toDecimal", "$DataJson.FormData.tradeTicketQuantityMt")
                                            }
                                        }
                                    }
                                }
                            },
                            0
                        })
                    )},
                    { "Realized", new BsonDocument("$sum", "$DataJson.FormData.orimuSgTotalPLUsd") },
                    { "TodayRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            "$DataJson.FormData.orimuSgTotalPLUsd",
                            0
                        })
                    )},
                    { "MonthRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                            }),
                            "$DataJson.FormData.orimuSgTotalPLUsd",
                            0
                        })
                    )},
                    { "UnRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$eq", new BsonArray
                            {
                                "$DataSourceId", OrimuTBAPFormId.ToLower()
                            }),
                            "$DataJson.FormData.unrealizedPLUsd",
                            0
                        })
                    )},
                    { "TodayUnRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$dayOfMonth", "$dateFilter"),todayDay
                                })
                            }),
                            new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$eq", new BsonArray
                                {
                                    "$DataSourceId", OrimuTBAPFormId.ToLower()
                                }),
                                "$DataJson.FormData.unrealizedPLUsd",
                                0
                            }),
                            0
                        })
                    )},
                    { "MonthUnRealized", new BsonDocument("$sum", new BsonDocument("$cond", new BsonArray
                        {
                            new BsonDocument("$and", new BsonArray
                            {
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$year", "$dateFilter"),todayYear
                                }),
                                new BsonDocument("$lte", new BsonArray
                                {
                                    new BsonDocument("$month", "$dateFilter"),todayMonth
                                }),
                            }),
                            new BsonDocument("$cond", new BsonArray
                            {
                                new BsonDocument("$eq", new BsonArray
                                {
                                    "$DataSourceId", OrimuTBAPFormId.ToLower()
                                }),
                                "$DataJson.FormData.unrealizedPLUsd",
                                0
                            }),
                            0
                        })
                    )},
                }),
                new BsonDocument("$project", new BsonDocument
                {
                    { "_id", 0 },
                    { "SourceCommodity", "$_id" },
                    { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                    { "TodayTotalQty", new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) },
                    { "Realized", new BsonDocument("$round", new BsonArray { "$Realized", 4 }) },
                    { "TodayRealized", new BsonDocument("$round", new BsonArray { "$TodayRealized", 4 }) },
                    { "MonthRealized", new BsonDocument("$round", new BsonArray { "$MonthRealized", 4 }) },
                    { "UnRealized", new BsonDocument("$round", new BsonArray { "$UnRealized", 4 }) },
                    { "TodayUnRealized", new BsonDocument("$round", new BsonArray { "$TodayUnRealized", 4 }) },
                    { "MonthUnRealized", new BsonDocument("$round", new BsonArray { "$MonthUnRealized", 4 }) }
                })
            };
            var positionSet25 = datasetCollection.Aggregate<BsonDocument>(pipeline25, aggregateOptions).ToList();
            List<PositionList9> positionList25 = BsonHelper.ConvertBsonDocumentListToModel<PositionList9>(positionSet25).ToList();

            //SG & Orimu sales
            List<BsonDocument> pipeline26 = new List<BsonDocument>
            {
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        { "DataSourceId", SGSalesFormId.ToLower() },
                        { "IsArchived", false }
                    }),
                new BsonDocument("$addFields",
                    new BsonDocument
                    {
                        { "Commodity", "$DataJson.FormData.commodity" },
                        { "TotalQty", new BsonDocument("$ifNull", new BsonArray
                            {
                                "$DataJson.FormData.salesSinceJan2023Mt",
                                0
                            })
                        },
                        { "dateFilter",
                            new BsonDocument("$dateFromString",
                                new BsonDocument
                                {
                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryPeriod", "0" }) },
                                    { "onError",
                                        new BsonDocument("$dateFromString",
                                            new BsonDocument
                                            {
                                                { "dateString", "$DataJson.FormData.tradeDate" },
                                                { "onError", BsonNull.Value }
                                            }
                                        )
                                    }
                                }
                            )
                        },
                    }),
                new BsonDocument("$match",
                    new BsonDocument
                    {
                        //{ "Source", new BsonDocument("$nin", new BsonArray
                        //    {
                        //        "",
                        //        BsonNull.Value,
                        //        " "
                        //    })
                        //},
                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
                        }
                    }
                ),
                new BsonDocument("$group",
                    new BsonDocument
                    {
                        { "_id", new BsonDocument
                            {
                                { "Commodity", "$Commodity" },
                                { "Company", "$DataJson.FormData.buyerIdenity" },
                            }
                        },
                        { "TotalQty",  new BsonDocument("$sum", "$TotalQty") },
                        { "TodayTotalQty", new BsonDocument("$sum", new BsonDocument
                        {
                            { "$cond", new BsonArray
                                {
                                    new BsonDocument("$and", new BsonArray
                                        {
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$year", "$dateFilter"), todayYear }),
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$month", "$dateFilter"), todayMonth }),
                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$dayOfMonth", "$dateFilter"), todayDay })
                                        }),
                                    "$TotalQty",
                                    0
                                }
                            } })
                        },
                    }
                ),
                new BsonDocument("$project",
                    new BsonDocument
                    {
                        { "_id", 0 },
                        { "CompanyName", "$_id.Company" },
                        { "Commodity", "$_id.Commodity" },
                        { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
                        { "TodayTotalQty", new BsonDocument("$round", new BsonArray { "$TodayTotalQty", 4 }) },
                    }
                )
            };
            var positionSet26 = datasetCollection.Aggregate<BsonDocument>(pipeline26, aggregateOptions).ToList();
            List<PositionList3> positionList26 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(positionSet26).ToList();

            ////-------------ANA-&-UMIRO-----------P&L new calculations start------------------------//
            ////realiased YTD
            //List<BsonDocument> pipeline27 = new List<BsonDocument>
            //{
            //    new BsonDocument("$match",
            //    new BsonDocument
            //        {
            //            { "DataSourceId",
            //    new BsonDocument("$in",
            //    new BsonArray(salesFormIds)) },
            //            { "IsArchived", false },
            //            { "DataJson.FormData.quantityMt2",
            //    new BsonDocument("$nin",
            //    new BsonArray
            //                {
            //                    BsonNull.Value,
            //                    "",
            //                    " "
            //                }) }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "UniqueId", "$DataJson.FormData.ImportUniqueId" },
            //            { "sourceCommodity",
            //    new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
            //            { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //            { "dateFilter",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                {
            //                    { "dateString",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                        {
            //                            "$DataJson.FormData.deliveryStartDate",
            //                            "0"
            //                        }) },
            //                    { "onError",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                        {
            //                            { "dateString", "$DataJson.FormData.tradeDate" },
            //                            { "onError", BsonNull.Value }
            //                        }) }
            //                }) },
            //            { "CompanyName",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    "UMIRO-INDIA",
            //                    "ANA-INDIA"
            //                }) },
            //            { "fxFormId",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    FXPaymentsUmiroFormId.ToLower(),
            //                    FXPaymentsANAFormId.ToLower()
            //                }) },
            //            { "consumedQty",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$cond",
            //                    new BsonArray
            //                        {
            //                            new BsonDocument("$ne",
            //                            new BsonArray
            //                                {
            //                                    "$DataJson.FormData.consumedQuantityMt",
            //                                    ""
            //                                }),
            //                            new BsonDocument("$toDecimal", "$DataJson.FormData.consumedQuantityMt"),
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "qty",
            //    new BsonDocument("$toDecimal", "$DataJson.FormData.quantityMt2") }
            //        }),
            //    new BsonDocument("$match",
            //    new BsonDocument("dateFilter",
            //    new BsonDocument
            //            {
            //                { "$gte",
            //    new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                { "$lte",
            //    new DateTime(toYear, toMonth, toDay, 23, 59, 59) }
            //            })),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id",
            //    new BsonDocument
            //            {
            //                { "CompanyName", "$CompanyName" },
            //                { "SourceCommodity", "$sourceCommodity" },
            //                { "SourceCommoditymain", "$DataJson.FormData.sourceCommodity" },
            //                { "locationlower", "$location" },
            //                { "fxFormId", "$fxFormId" },
            //                { "UniqueId", "$UniqueId" }
            //            } },
            //            { "Qty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$qty",
            //                                0
            //                            }),
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$consumedQty",
            //                                0
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.uniqueIdImportLocal" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray (purchageFormIds)) },
            //                        { "IsArchived", false }
            //                    }),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                            {
            //                                { "dateString",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                                    {
            //                                        "$DataJson.FormData.deliveryPeriod",
            //                                        "0"
            //                                    }) },
            //                                { "onError",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                    {
            //                                        { "dateString", "$DataJson.FormData.contractDate" },
            //                                        { "onError", BsonNull.Value }
            //                                    }) }
            //                            }))),
            //                new BsonDocument("$match",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument
            //                        {
            //                            { "$gte",
            //                new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                            { "$lte",
            //                new DateTime(toYear, toMonth, toDay, 23, 59, 59) }
            //                        })),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "contractQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.contractQuantityMt",
            //                                0
            //                            }) },
            //                        { "sotQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.sotQuantityMt",
            //                                0
            //                            }) },
            //                        { "valueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.valueInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "purchage" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.selectSourceContract" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray(dutyFormIds)) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalPaidDutyInclIgstValueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalPaidDutyInclIgstValueInr",
            //                                0
            //                            }) },
            //                        { "totalUnpaidDutyQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalUnpaidDutyQuantityMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "customsDuty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.SourceCommoditymain" },
            //            { "foreignField", "DataJson.FormData.commodity" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.startDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DutyFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "inrCustomsDutyPerMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.inrCustomsDutyPerMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "anaumiroduty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //                { "fxFormId", "$DataSourceId" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument("$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$location",
            //                                        "$_id.locationlower"
            //                                    }),
            //                                new BsonDocument("$gte",
            //                                new BsonArray
            //                                    {
            //                                        "$fxFormId",
            //                                        "$_id.fxFormId"
            //                                    })
            //                            }))),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray
            //                            {
            //                                FXPaymentsANAFormId.ToLower(),
            //                                FXPaymentsUmiroFormId.ToLower()
            //                            }) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalFxSettledValueInInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalFxSettledValueInInr",
            //                                0
            //                            }) },
            //                        { "fxValuePendingRemittance",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.fxValuePendingRemittance",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "fxData" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "companyName", "$DataJson.FormData.location" },
            //                { "commodity", "$DataJson.FormData.commodity1" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DailyRatesFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$companyName",
            //                                        "$_id.CompanyName"
            //                                    }),
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$commodity",
            //                                        "$_id.SourceCommoditymain"
            //                                    })
            //                            }) },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(toYear, toMonth, toDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "usdToInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.usdToInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "dailyrates" }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "totalPaidDutyInclIgstValueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalPaidDutyInclIgstValueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalUnpaidDutyQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalUnpaidDutyQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "inrCustomsDutyPerMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$anaumiroduty.inrCustomsDutyPerMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "contractQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.contractQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "sotQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.sotQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "valueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.valueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalFxSettledValueInInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.totalFxSettledValueInInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "fxValuePendingRemittance",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.fxValuePendingRemittance",
            //                            0
            //                        }),
            //                    0
            //                }) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "Unique", "$_id.UniqueId" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "totalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalPaidDutyInclIgstValueInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$totalUnpaidDutyQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$inrCustomsDutyPerMt",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$sotQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$sotQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalFxSettledValueInInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$fxValuePendingRemittance",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$usdToInr",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$contractQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$multiply",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$cond",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$eq",
            //                                        new BsonArray
            //                                            {
            //                                                "$contractQuantityMt",
            //                                                0
            //                                            }),
            //                                        0,
            //                                        new BsonDocument("$divide",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$Qty",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        1
            //                                                    })
            //                                            })
            //                                    }),
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$valueInr",
            //                                        0
            //                                    })
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "TotalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$toDecimal", "$totalQty")) }
            //        }),
            //    new BsonDocument("$project",
            //    new BsonDocument
            //        {
            //            { "_id", 0 },
            //            { "CompanyName", "$_id.CompanyName" },
            //            { "SourceCommodity", "$_id.SourceCommodity" },
            //            { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
            //        })
            //};
            //var positionSet27 = datasetCollection.Aggregate<BsonDocument>(pipeline27, aggregateOptions).ToList();
            //List<PositionList9> positionList27 = BsonHelper.ConvertBsonDocumentListToModel<PositionList9>(positionSet27).ToList();

            ////realiased YTD - last month
            //List<BsonDocument> pipeline28 = new List<BsonDocument>
            //{
            //    new BsonDocument("$match",
            //    new BsonDocument
            //        {
            //            { "DataSourceId",
            //    new BsonDocument("$in",
            //    new BsonArray(salesFormIds)) },
            //            { "IsArchived", false },
            //            { "DataJson.FormData.quantityMt2",
            //    new BsonDocument("$nin",
            //    new BsonArray
            //                {
            //                    BsonNull.Value,
            //                    "",
            //                    " "
            //                }) }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "UniqueId", "$DataJson.FormData.ImportUniqueId" },
            //            { "sourceCommodity",
            //    new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
            //            { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //            { "dateFilter",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                {
            //                    { "dateString",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                        {
            //                            "$DataJson.FormData.deliveryStartDate",
            //                            "0"
            //                        }) },
            //                    { "onError",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                        {
            //                            { "dateString", "$DataJson.FormData.tradeDate" },
            //                            { "onError", BsonNull.Value }
            //                        }) }
            //                }) },
            //            { "CompanyName",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    "UMIRO-INDIA",
            //                    "ANA-INDIA"
            //                }) },
            //            { "fxFormId",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    FXPaymentsUmiroFormId.ToLower(),
            //                    FXPaymentsANAFormId.ToLower()
            //                }) },
            //            { "consumedQty",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$cond",
            //                    new BsonArray
            //                        {
            //                            new BsonDocument("$ne",
            //                            new BsonArray
            //                                {
            //                                    "$DataJson.FormData.consumedQuantityMt",
            //                                    ""
            //                                }),
            //                            new BsonDocument("$toDecimal", "$DataJson.FormData.consumedQuantityMt"),
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "qty",
            //    new BsonDocument("$toDecimal", "$DataJson.FormData.quantityMt2") }
            //        }),
            //    new BsonDocument("$match",
            //    new BsonDocument("dateFilter",
            //    new BsonDocument
            //            {
            //                { "$gte",
            //    new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                { "$lte",
            //    new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59) }
            //            })),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id",
            //    new BsonDocument
            //            {
            //                { "CompanyName", "$CompanyName" },
            //                { "SourceCommodity", "$sourceCommodity" },
            //                { "SourceCommoditymain", "$DataJson.FormData.sourceCommodity" },
            //                { "locationlower", "$location" },
            //                { "fxFormId", "$fxFormId" },
            //                { "UniqueId", "$UniqueId" }
            //            } },
            //            { "Qty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$qty",
            //                                0
            //                            }),
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$consumedQty",
            //                                0
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.uniqueIdImportLocal" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray (purchageFormIds)) },
            //                        { "IsArchived", false }
            //                    }),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                            {
            //                                { "dateString",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                                    {
            //                                        "$DataJson.FormData.deliveryPeriod",
            //                                        "0"
            //                                    }) },
            //                                { "onError",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                    {
            //                                        { "dateString", "$DataJson.FormData.contractDate" },
            //                                        { "onError", BsonNull.Value }
            //                                    }) }
            //                            }))),
            //                new BsonDocument("$match",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument
            //                        {
            //                            { "$gte",
            //                new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                            { "$lte",
            //                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59) }
            //                        })),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "contractQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.contractQuantityMt",
            //                                0
            //                            }) },
            //                        { "sotQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.sotQuantityMt",
            //                                0
            //                            }) },
            //                        { "valueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.valueInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "purchage" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.selectSourceContract" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray(dutyFormIds)) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalPaidDutyInclIgstValueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalPaidDutyInclIgstValueInr",
            //                                0
            //                            }) },
            //                        { "totalUnpaidDutyQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalUnpaidDutyQuantityMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "customsDuty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.SourceCommoditymain" },
            //            { "foreignField", "DataJson.FormData.commodity" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.startDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DutyFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "inrCustomsDutyPerMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.inrCustomsDutyPerMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "anaumiroduty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //                { "fxFormId", "$DataSourceId" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument("$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$location",
            //                                        "$_id.locationlower"
            //                                    }),
            //                                new BsonDocument("$gte",
            //                                new BsonArray
            //                                    {
            //                                        "$fxFormId",
            //                                        "$_id.fxFormId"
            //                                    })
            //                            }))),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray
            //                            {
            //                                FXPaymentsANAFormId.ToLower(),
            //                                FXPaymentsUmiroFormId.ToLower()
            //                            }) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalFxSettledValueInInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalFxSettledValueInInr",
            //                                0
            //                            }) },
            //                        { "fxValuePendingRemittance",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.fxValuePendingRemittance",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "fxData" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "companyName", "$DataJson.FormData.location" },
            //                { "commodity", "$DataJson.FormData.commodity1" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DailyRatesFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$companyName",
            //                                        "$_id.CompanyName"
            //                                    }),
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$commodity",
            //                                        "$_id.SourceCommoditymain"
            //                                    })
            //                            }) },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "usdToInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.usdToInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "dailyrates" }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "totalPaidDutyInclIgstValueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalPaidDutyInclIgstValueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalUnpaidDutyQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalUnpaidDutyQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "inrCustomsDutyPerMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$anaumiroduty.inrCustomsDutyPerMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "contractQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.contractQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "sotQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.sotQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "valueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.valueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalFxSettledValueInInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.totalFxSettledValueInInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "fxValuePendingRemittance",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.fxValuePendingRemittance",
            //                            0
            //                        }),
            //                    0
            //                }) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "Unique", "$_id.UniqueId" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "totalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalPaidDutyInclIgstValueInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$totalUnpaidDutyQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$inrCustomsDutyPerMt",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$sotQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$sotQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalFxSettledValueInInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$fxValuePendingRemittance",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$usdToInr",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$contractQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$multiply",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$cond",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$eq",
            //                                        new BsonArray
            //                                            {
            //                                                "$contractQuantityMt",
            //                                                0
            //                                            }),
            //                                        0,
            //                                        new BsonDocument("$divide",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$Qty",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        1
            //                                                    })
            //                                            })
            //                                    }),
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$valueInr",
            //                                        0
            //                                    })
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "TotalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$toDecimal", "$totalQty")) }
            //        }),
            //    new BsonDocument("$project",
            //    new BsonDocument
            //        {
            //            { "_id", 0 },
            //            { "CompanyName", "$_id.CompanyName" },
            //            { "SourceCommodity", "$_id.SourceCommodity" },
            //            { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
            //        })
            //};
            //var positionSet28 = datasetCollection.Aggregate<BsonDocument>(pipeline28, aggregateOptions).ToList();
            //List<PositionList9> positionList28 = BsonHelper.ConvertBsonDocumentListToModel<PositionList9>(positionSet28).ToList();

            ////realiased YTD - previous day
            //List<BsonDocument> pipeline29 = new List<BsonDocument>
            //{
            //    new BsonDocument("$match",
            //    new BsonDocument
            //        {
            //            { "DataSourceId",
            //    new BsonDocument("$in",
            //    new BsonArray(salesFormIds)) },
            //            { "IsArchived", false },
            //            { "DataJson.FormData.quantityMt2",
            //    new BsonDocument("$nin",
            //    new BsonArray
            //                {
            //                    BsonNull.Value,
            //                    "",
            //                    " "
            //                }) }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "UniqueId", "$DataJson.FormData.ImportUniqueId" },
            //            { "sourceCommodity",
            //    new BsonDocument("$toLower", "$DataJson.FormData.sourceCommodity") },
            //            { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //            { "dateFilter",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                {
            //                    { "dateString",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                        {
            //                            "$DataJson.FormData.deliveryStartDate",
            //                            "0"
            //                        }) },
            //                    { "onError",
            //    new BsonDocument("$dateFromString",
            //    new BsonDocument
            //                        {
            //                            { "dateString", "$DataJson.FormData.tradeDate" },
            //                            { "onError", BsonNull.Value }
            //                        }) }
            //                }) },
            //            { "CompanyName",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    "UMIRO-INDIA",
            //                    "ANA-INDIA"
            //                }) },
            //            { "fxFormId",
            //    new BsonDocument("$cond",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$eq",
            //                    new BsonArray
            //                        {
            //                            "$DataSourceId",
            //                            umiroSalesFormId
            //                        }),
            //                    FXPaymentsUmiroFormId.ToLower(),
            //                    FXPaymentsANAFormId.ToLower()
            //                }) },
            //            { "consumedQty",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$cond",
            //                    new BsonArray
            //                        {
            //                            new BsonDocument("$ne",
            //                            new BsonArray
            //                                {
            //                                    "$DataJson.FormData.consumedQuantityMt",
            //                                    ""
            //                                }),
            //                            new BsonDocument("$toDecimal", "$DataJson.FormData.consumedQuantityMt"),
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "qty",
            //    new BsonDocument("$toDecimal", "$DataJson.FormData.quantityMt2") }
            //        }),
            //    new BsonDocument("$match",
            //    new BsonDocument("dateFilter",
            //    new BsonDocument
            //            {
            //                { "$gte",
            //    new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                { "$lte",
            //    new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59) }
            //            })),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id",
            //    new BsonDocument
            //            {
            //                { "CompanyName", "$CompanyName" },
            //                { "SourceCommodity", "$sourceCommodity" },
            //                { "SourceCommoditymain", "$DataJson.FormData.sourceCommodity" },
            //                { "locationlower", "$location" },
            //                { "fxFormId", "$fxFormId" },
            //                { "UniqueId", "$UniqueId" }
            //            } },
            //            { "Qty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$qty",
            //                                0
            //                            }),
            //                        new BsonDocument("$ifNull",
            //                        new BsonArray
            //                            {
            //                                "$consumedQty",
            //                                0
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.uniqueIdImportLocal" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray (purchageFormIds)) },
            //                        { "IsArchived", false }
            //                    }),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                            {
            //                                { "dateString",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                                    {
            //                                        "$DataJson.FormData.deliveryPeriod",
            //                                        "0"
            //                                    }) },
            //                                { "onError",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                    {
            //                                        { "dateString", "$DataJson.FormData.contractDate" },
            //                                        { "onError", BsonNull.Value }
            //                                    }) }
            //                            }))),
            //                new BsonDocument("$match",
            //                new BsonDocument("dateFilter",
            //                new BsonDocument
            //                        {
            //                            { "$gte",
            //                new DateTime(fromYear, fromMonth, fromDay, 0, 0, 0) },
            //                            { "$lte",
            //                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59) }
            //                        })),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "contractQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.contractQuantityMt",
            //                                0
            //                            }) },
            //                        { "sotQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.sotQuantityMt",
            //                                0
            //                            }) },
            //                        { "valueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.valueInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "purchage" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.UniqueId" },
            //            { "foreignField", "DataJson.FormData.selectSourceContract" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray(dutyFormIds)) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalPaidDutyInclIgstValueInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalPaidDutyInclIgstValueInr",
            //                                0
            //                            }) },
            //                        { "totalUnpaidDutyQuantityMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalUnpaidDutyQuantityMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "customsDuty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "localField", "_id.SourceCommoditymain" },
            //            { "foreignField", "DataJson.FormData.commodity" },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.startDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DutyFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "inrCustomsDutyPerMt",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.inrCustomsDutyPerMt",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "anaumiroduty" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "location",
            //    new BsonDocument("$toLower", "$DataJson.FormData.location") },
            //                { "fxFormId", "$DataSourceId" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$match",
            //                new BsonDocument("$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$location",
            //                                        "$_id.locationlower"
            //                                    }),
            //                                new BsonDocument("$gte",
            //                                new BsonArray
            //                                    {
            //                                        "$fxFormId",
            //                                        "$_id.fxFormId"
            //                                    })
            //                            }))),
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId",
            //                new BsonDocument("$in",
            //                new BsonArray
            //                            {
            //                                FXPaymentsANAFormId.ToLower(),
            //                                FXPaymentsUmiroFormId.ToLower()
            //                            }) },
            //                        { "IsArchived", false },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "totalFxSettledValueInInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.totalFxSettledValueInInr",
            //                                0
            //                            }) },
            //                        { "fxValuePendingRemittance",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.fxValuePendingRemittance",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "fxData" }
            //        }),
            //    new BsonDocument("$lookup",
            //    new BsonDocument
            //        {
            //            { "from", "DataSet" },
            //            { "let",
            //    new BsonDocument
            //            {
            //                { "companyName", "$DataJson.FormData.location" },
            //                { "commodity", "$DataJson.FormData.commodity1" }
            //            } },
            //            { "pipeline",
            //    new BsonArray
            //            {
            //                new BsonDocument("$addFields",
            //                new BsonDocument("contractDate",
            //                new BsonDocument("$toDate",
            //                new BsonDocument("$dateFromString",
            //                new BsonDocument
            //                                {
            //                                    { "dateString", "$DataJson.FormData.entryDate" },
            //                                    { "onError", BsonNull.Value }
            //                                })))),
            //                new BsonDocument("$match",
            //                new BsonDocument
            //                    {
            //                        { "DataSourceId", DailyRatesFormId.ToLower() },
            //                        { "IsArchived", false },
            //                        { "$expr",
            //                new BsonDocument("$and",
            //                new BsonArray
            //                            {
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$companyName",
            //                                        "$_id.CompanyName"
            //                                    }),
            //                                new BsonDocument("$eq",
            //                                new BsonArray
            //                                    {
            //                                        "$commodity",
            //                                        "$_id.SourceCommoditymain"
            //                                    })
            //                            }) },
            //                        { "contractDate",
            //                new BsonDocument("$lte",
            //                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)) }
            //                    }),
            //                new BsonDocument("$sort",
            //                new BsonDocument("contractDate", -1)),
            //                new BsonDocument("$limit", 1),
            //                new BsonDocument("$project",
            //                new BsonDocument
            //                    {
            //                        { "_id", 0 },
            //                        { "usdToInr",
            //                new BsonDocument("$ifNull",
            //                new BsonArray
            //                            {
            //                                "$DataJson.FormData.usdToInr",
            //                                0
            //                            }) }
            //                    })
            //            } },
            //            { "as", "dailyrates" }
            //        }),
            //    new BsonDocument("$addFields",
            //    new BsonDocument
            //        {
            //            { "totalPaidDutyInclIgstValueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalPaidDutyInclIgstValueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalUnpaidDutyQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$customsDuty.totalUnpaidDutyQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "inrCustomsDutyPerMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$anaumiroduty.inrCustomsDutyPerMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "contractQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.contractQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "sotQuantityMt",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.sotQuantityMt",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "valueInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$purchage.valueInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "totalFxSettledValueInInr",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.totalFxSettledValueInInr",
            //                            0
            //                        }),
            //                    0
            //                }) },
            //            { "fxValuePendingRemittance",
            //    new BsonDocument("$ifNull",
            //    new BsonArray
            //                {
            //                    new BsonDocument("$arrayElemAt",
            //                    new BsonArray
            //                        {
            //                            "$fxData.fxValuePendingRemittance",
            //                            0
            //                        }),
            //                    0
            //                }) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "Unique", "$_id.UniqueId" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "totalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$add",
            //    new BsonArray
            //                    {
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalPaidDutyInclIgstValueInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$totalUnpaidDutyQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$inrCustomsDutyPerMt",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$sotQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$sotQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$add",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$totalFxSettledValueInInr",
            //                                        0
            //                                    }),
            //                                new BsonDocument("$multiply",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$multiply",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$fxValuePendingRemittance",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$usdToInr",
            //                                                        0
            //                                                    })
            //                                            }),
            //                                        new BsonDocument("$cond",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$eq",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        0
            //                                                    }),
            //                                                0,
            //                                                new BsonDocument("$divide",
            //                                                new BsonArray
            //                                                    {
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$Qty",
            //                                                                0
            //                                                            }),
            //                                                        new BsonDocument("$ifNull",
            //                                                        new BsonArray
            //                                                            {
            //                                                                "$contractQuantityMt",
            //                                                                1
            //                                                            })
            //                                                    })
            //                                            })
            //                                    })
            //                            }),
            //                        new BsonDocument("$multiply",
            //                        new BsonArray
            //                            {
            //                                new BsonDocument("$cond",
            //                                new BsonArray
            //                                    {
            //                                        new BsonDocument("$eq",
            //                                        new BsonArray
            //                                            {
            //                                                "$contractQuantityMt",
            //                                                0
            //                                            }),
            //                                        0,
            //                                        new BsonDocument("$divide",
            //                                        new BsonArray
            //                                            {
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$Qty",
            //                                                        0
            //                                                    }),
            //                                                new BsonDocument("$ifNull",
            //                                                new BsonArray
            //                                                    {
            //                                                        "$contractQuantityMt",
            //                                                        1
            //                                                    })
            //                                            })
            //                                    }),
            //                                new BsonDocument("$ifNull",
            //                                new BsonArray
            //                                    {
            //                                        "$valueInr",
            //                                        0
            //                                    })
            //                            })
            //                    })) }
            //        }),
            //    new BsonDocument("$group",
            //    new BsonDocument
            //        {
            //            { "_id", new BsonDocument
            //            {
            //                { "CompanyName", "$_id.CompanyName" },
            //                { "SourceCommodity", "$_id.SourceCommodity" }
            //            } },
            //            { "TotalQty",
            //    new BsonDocument("$sum",
            //    new BsonDocument("$toDecimal", "$totalQty")) }
            //        }),
            //    new BsonDocument("$project",
            //    new BsonDocument
            //        {
            //            { "_id", 0 },
            //            { "CompanyName", "$_id.CompanyName" },
            //            { "SourceCommodity", "$_id.SourceCommodity" },
            //            { "TotalQty", new BsonDocument("$round", new BsonArray { "$TotalQty", 4 }) },
            //        })
            //};
            //var positionSet29 = datasetCollection.Aggregate<BsonDocument>(pipeline29, aggregateOptions).ToList();
            //List<PositionList9> positionList29 = BsonHelper.ConvertBsonDocumentListToModel<PositionList9>(positionSet29).ToList();

            ///////////////////////////////
            //new

            var vesselsQuery = new List<BsonDocument> 
            {
                 new BsonDocument("$match",
    new BsonDocument
        {
            { "DataSourceId",
    new BsonDocument("$in",
    new BsonArray
                {
                    "c201551e-8804-4025-95a6-90783b64f69b",
                    "d87ea5af-aa5d-4499-a84e-8d1094170e01",
                    "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
                    "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
                    "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
                    "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
                    "72e023c9-ff29-4e6f-ae71-8670769c81e6"
                }) },
            { "IsArchived", false },
        { "DataJson.FormData.uniqueIdImportLocal", new BsonDocument("$nin", new BsonArray{ "", BsonNull.Value ," "}) }
        }),
    new BsonDocument("$project",
    new BsonDocument
        {
            { "_id", 0 },
            { "UniqueIdImportLocal", "$DataJson.FormData.uniqueIdImportLocal" },
            { "Commodity", "$DataJson.FormData.commodity" },
            { "Type",
    new BsonDocument("$cond",
    new BsonArray
                {
                    new BsonDocument("$ne",
                    new BsonArray
                        {
                            "$DataJson.FormData.contractDetails",
                            BsonNull.Value
                        }),
                    "IMPORTED",
                    "LOCAL"
                }) },
            { "CompanyName", "$DataJson.FormData.entity" }
        })
            };
            var vesselsList = datasetCollection.Aggregate<BsonDocument>(vesselsQuery, aggregateOptions).ToList();
            List<VesselLoopModel> vessels = BsonHelper.ConvertBsonDocumentListToModel<VesselLoopModel>(vesselsList).ToList();
            List<string> comapnies = new List<string>(Companies.Values);
            var vstodate = new List<VesselDashboardOutputModel>();
            var vspdate = new List<VesselDashboardOutputModel>();
            var vspm = new List<VesselDashboardOutputModel>();
            foreach (var v in vessels)
            {
                var cn = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : v.CompanyName;
                Companies.TryGetValue(cn, out string cid);
                loggedInContext.CompanyGuid = Guid.Parse(cid);
                var vessel = GetVesselDashboard(new VesselDashboardInputModel 
                {   
                    ProductType = v.Type, 
                    CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : v.CompanyName,
                    ContractUniqueId = v.UniqueIdImportLocal,
                    FromDate = fromDate,
                    Todate = toDate1
                }, loggedInContext, new List<ValidationMessage>(), true);
                vessel.CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : "ANA-INDIA";
                vstodate.Add(vessel);
                var vesselpd = GetVesselDashboard(new VesselDashboardInputModel
                {
                    ProductType = v.Type,
                    CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : v.CompanyName,
                    ContractUniqueId = v.UniqueIdImportLocal,
                    FromDate = fromDate,
                    Todate = new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)
                }, loggedInContext, new List<ValidationMessage>(), true);
                vesselpd.CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : "ANA-INDIA";
                vspdate.Add(vesselpd);
                var vesselpm = GetVesselDashboard(new VesselDashboardInputModel
                {
                    ProductType = v.Type,
                    CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : v.CompanyName,
                    ContractUniqueId = v.UniqueIdImportLocal,
                    FromDate = fromDate,
                    Todate = new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)
                }, loggedInContext, new List<ValidationMessage>(), true);
                vesselpm.CompanyName = v.CompanyName == "UMIRO" ? "Umiro-INDIA" : "ANA-INDIA";
                vspm.Add(vesselpm);
            }


            //////////////////////////////////////



//            // new realised cals //
//            var realised1 = new List<BsonDocument>
//{
//    new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "ParentCommodity", "$DataJson.FormData.sourceCommodity" },
//            { "Source", "$DataJson.FormData.commodity1" },
//            { "RealisedValue", "$DataJson.FormData.valueInr1" },
//            { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        },
//            { "CompanyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//    new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "companyName", "$CompanyName" },
//                { "ParentCommodity", "$ParentCommodity" }
//            } },
//            { "RealisedValue",
//    new BsonDocument("$sum", "$RealisedValue") },
//            { "TodayRealisedValue", new BsonDocument("$sum", new BsonDocument
//                        {
//                            { "$cond", new BsonArray
//                                {
//                                    new BsonDocument("$and", new BsonArray
//                                        {
//                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$year", "$datefilter"), previousYear }),
//                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$month", "$datefilter"), previousMonth }),
//                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$dayOfMonth", "$datefilter"), previousDay })
//                                        }),
//                                    "$RealisedValue",
//                                    0
//                                }
//                            } })
//                        },
//                        { "MonthRealisedValue", new BsonDocument("$sum", new BsonDocument
//                        {
//                            { "$cond", new BsonArray
//                                {
//                                    new BsonDocument("$and", new BsonArray
//                                        {
//                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$year", "$datefilter"), pastYear }),
//                                            new BsonDocument("$lte", new BsonArray { new BsonDocument("$month", "$datefilter"), pastMonth }),
//                                        }),
//                                    "$RealisedValue",
//                                    0
//                                }
//                            } })
//                        }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "RealisedValue", 1 },
//            { "CompanyName", "$_id.companyName" },
//            { "ParentCommodity", "$_id.ParentCommodity" },
//            { "TodayRealisedValue", 1 },
//            { "MonthRealisedValue", 1 },
//        })
//};
//            var realised11 = datasetCollection.Aggregate<BsonDocument>(realised1, aggregateOptions).ToList();
//            List<PositionList3> realised111 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(realised11).ToList();

//            var prevdayrealised1 = new List<BsonDocument>
//{
//    new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "ParentCommodity", "$DataJson.FormData.sourceCommodity" },
//            { "Source", "$DataJson.FormData.commodity1" },
//            { "RealisedValue", "$DataJson.FormData.valueInr1" },
//            { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        },
//            { "CompanyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//    new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "companyName", "$CompanyName" },
//                { "ParentCommodity", "$ParentCommodity" }
//            } },
//            { "RealisedValue",
//    new BsonDocument("$sum", "$RealisedValue") },
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "RealisedValue", 1 },
//            { "CompanyName", "$_id.companyName" },
//            { "ParentCommodity", "$_id.ParentCommodity" },
//            { "TodayRealisedValue", 1 },
//            { "MonthRealisedValue", 1 },
//        })
//};
//            var prevdayrealised11 = datasetCollection.Aggregate<BsonDocument>(prevdayrealised1, aggregateOptions).ToList();
//            List<PositionList3> prevdayrealised111 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(prevdayrealised11).ToList();

//            var prevmrealised1 = new List<BsonDocument>
//{
//    new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "ParentCommodity", "$DataJson.FormData.sourceCommodity" },
//            { "Source", "$DataJson.FormData.commodity1" },
//            { "RealisedValue", "$DataJson.FormData.valueInr1" },
//            { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        },
//            { "CompanyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//    new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "companyName", "$CompanyName" },
//                { "ParentCommodity", "$ParentCommodity" }
//            } },
//            { "RealisedValue",
//    new BsonDocument("$sum", "$RealisedValue") },
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "RealisedValue", 1 },
//            { "CompanyName", "$_id.companyName" },
//            { "ParentCommodity", "$_id.ParentCommodity" },
//            { "TodayRealisedValue", 1 },
//            { "MonthRealisedValue", 1 },
//        })
//};
//            var prevmrealised11 = datasetCollection.Aggregate<BsonDocument>(prevmrealised1, aggregateOptions).ToList();
//            List<PositionList3> prevmrealised111 = BsonHelper.ConvertBsonDocumentListToModel<PositionList3>(prevmrealised11).ToList();

//            var duty1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               //new BsonDocument("$match",
//               //     new BsonDocument
//               //     {
//               //         { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//               //                              .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//               //         }
//               //     }
//               // ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSoldQuantityYTD",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalSoldQuantityYTD",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalSoldQuantityYTD" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0},
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$totalSoldQuantityYTD",
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var duty11 = datasetCollection.Aggregate<BsonDocument>(duty1, aggregateOptions).ToList();
//            List<TotalRealisedDutyCost> duty111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRealisedDutyCost>(duty11).ToList();

//            var prevdayduty1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               //new BsonDocument("$match",
//               //     new BsonDocument
//               //     {
//               //         { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//               //                              .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//               //         }
//               //     }
//               // ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSoldQuantityYTD",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalSoldQuantityYTD",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalSoldQuantityYTD" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0},
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$totalSoldQuantityYTD",
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var prevdayduty11= datasetCollection.Aggregate<BsonDocument>(prevdayduty1, aggregateOptions).ToList();
//            List<TotalRealisedDutyCost> prevdayduty111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRealisedDutyCost>(prevdayduty11).ToList();

//            var pastmduty1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSoldQuantityYTD",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalSoldQuantityYTD",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalSoldQuantityYTD" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0},
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$totalSoldQuantityYTD",
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pastmduty11 = datasetCollection.Aggregate<BsonDocument>(pastmduty1, aggregateOptions).ToList();
//            List<TotalRealisedDutyCost> pastmduty111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRealisedDutyCost>(pastmduty11).ToList();

//            var fxCost1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(toYear, toMonth, toDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
////new BsonDocument("$match",
////                    new BsonDocument
////                    {
////                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
////                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
////                        }
////                    }
////                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$usdToInr",
//                            4
//                        }),
//                    0
//                }) },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var fxCost11 = datasetCollection.Aggregate<BsonDocument>(fxCost1, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> fxCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(fxCost11).ToList();

//            var prevdayfxCost1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
////new BsonDocument("$match",
////                    new BsonDocument
////                    {
////                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
////                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
////                        }
////                    }
////                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$usdToInr",
//                            4
//                        }),
//                    0
//                }) },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var prevdayfxCost11 = datasetCollection.Aggregate<BsonDocument>(prevdayfxCost1, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> prevdayfxCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(prevdayfxCost11).ToList();

//            var pastmfxCost1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                BsonDateTime.Create(new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
////new BsonDocument("$match",
////                    new BsonDocument
////                    {
////                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
////                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
////                        }
////                    }
////                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$usdToInr",
//                            4
//                        }),
//                    0
//                }) },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pastmfxCost11 = datasetCollection.Aggregate<BsonDocument>(pastmfxCost1, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> pastmfxCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(pastmfxCost11).ToList();


//            var localFx = new List<BsonDocument>
//            {
//                new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$soldQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "quantityMt2", "$$paidUnpaid.quantityMt2" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "Localfx",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }) }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", "$companyName" },
//                                    { "UsdToInr", 1 },
//                                    { "Localfx", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$Localfx", 4 }), 0}) }
//                                }
//                            )
//            };
//            var localFx1 = datasetCollection.Aggregate<BsonDocument>(localFx, aggregateOptions).ToList();
//            List<TotalLocalFx> localFx111 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(localFx1).ToList();

//            var prevdaylocalFx = new List<BsonDocument>
//            {
//                new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$soldQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "quantityMt2", "$$paidUnpaid.quantityMt2" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "Localfx",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }) }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", "$companyName" },
//                                    { "UsdToInr", 1 },
//                                    { "Localfx", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$Localfx", 4 }), 0}) }
//                                }
//                            )
//            };
//            var prevdaylocalFx1 = datasetCollection.Aggregate<BsonDocument>(prevdaylocalFx, aggregateOptions).ToList();
//            List<TotalLocalFx> prevdaylocalFx111 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(prevdaylocalFx1).ToList();

//            var prevmlocalFx = new List<BsonDocument>
//            {
//                new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "soldQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "quantityMt2",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$soldQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "quantityMt2", "$$paidUnpaid.quantityMt2" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id"},
//            { "companyName", 1 },
//            { "Localfx",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            "$quantityMt2",
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }) }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", "$companyName" },
//                                    { "UsdToInr", 1 },
//                                    { "Localfx", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$Localfx", 4 }), 0}) }
//                                }
//                            )
//            };
//            var prevmlocalFx1 = datasetCollection.Aggregate<BsonDocument>(prevmlocalFx, aggregateOptions).ToList();
//            List<TotalLocalFx> prevmlocalFx11 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(prevmlocalFx1).ToList();

//            var refiningCost1 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedRefiningCostInr1") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedRefiningCostInr1", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var refiningCost11 = datasetCollection.Aggregate<BsonDocument>(refiningCost1, aggregateOptions).ToList();
//            List<TotalRefiningCost> refiningCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRefiningCost>(refiningCost11).ToList();

//            var prevdayrefiningCost1 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedRefiningCostInr1") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedRefiningCostInr1", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var prevdayrefiningCost11 = datasetCollection.Aggregate<BsonDocument>(prevdayrefiningCost1, aggregateOptions).ToList();
//            List<TotalRefiningCost> prevdayrefiningCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRefiningCost>(prevdayrefiningCost11).ToList();

//            var prevmrefiningCost1 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedRefiningCostInr1") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedRefiningCostInr1", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var prevmrefiningCost11 = datasetCollection.Aggregate<BsonDocument>(prevmrefiningCost1, aggregateOptions).ToList();
//            List<TotalRefiningCost> prevmrefiningCost111 = BsonHelper.ConvertBsonDocumentListToModel<TotalRefiningCost>(prevmrefiningCost11).ToList();

//            //new unrealised cost
//            var unrealised1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "commodity",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "commodity1", "$DataJson.FormData.commodity1" },
//                        { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$addFields",
//                new BsonDocument("producedQuantity",
//                new BsonDocument("$switch",
//                new BsonDocument
//                            {
//                                { "branches",
//                new BsonArray
//                                {
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CPO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cpoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdOleinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "STEARIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.stearinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "PFAD"
//                                            }) },
//                                        { "then", "$DataJson.FormData.pfadMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "Loss"
//                                            }) },
//                                        { "then", "$DataJson.FormData.lossMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinImportMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt2" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SUNFLOWER FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.sunflowerFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB OIL WAX"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbOilWaxMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SOY ACID OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.soyAcidOilMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRUDE GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crudeGlycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinLocalMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinTradingMt" }
//                                    }
//                                } },
//                                { "default", 0 }
//                            }))),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" },
//                            { "commodity1", "$DataJson.FormData.commodity1" }
//                        } },
//                        { "soldQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") },
//                        { "cpoQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
//                        { "totalProducedQuantity",
//                new BsonDocument("$sum", "$producedQuantity") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } },
//            { "rateInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.rateInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument("dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }))) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(toYear, toMonth, toDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "rateInr",
//                new BsonDocument("$first", "$DataJson.FormData.rateInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$commodity" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "commodity1", "$$paidUnpaid._id.commodity1" },
//                        { "soldQuantity", "$$paidUnpaid.soldQuantity" },
//                        { "cpoQuantity", "$$paidUnpaid.cpoQuantity" },
//                        { "totalProducedQuantity", "$$paidUnpaid.totalProducedQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) },
//                        { "rateInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$rateInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.rateInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 1 },
//            { "commodity1", 1 },
//            { "CompanyName", "$companyName" },
//            { "AvailableBalance",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$_commodity",
//                            "CPO"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$finalAdjustedQuantityMt",
//                            "$cpoQuantity"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$totalProducedQuantity",
//                            "$soldQuantity"
//                        })
//                }) },
//            { "commodity", "$_id" },
//            { "companyName", 1 },
//            { "rateInr", "$rateInr" }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "CompanyName", 1 },
//            { "Commodity", "$commodity" },
//            { "SalesCommodity", "$commodity1" },
//            { "Unrealised", new BsonDocument("$round", new BsonArray { new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    "$AvailableBalance",
//                    "$rateInr"
//                }), 4 })
//     }
//        })
//};
//            var unrealised11 = datasetCollection.Aggregate<BsonDocument>(unrealised1, aggregateOptions).ToList();
//            List<TotalUnrealisedModel> unrealised111 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnrealisedModel>(unrealised11).ToList();

//            var pdur1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "commodity",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "commodity1", "$DataJson.FormData.commodity1" },
//                        { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$addFields",
//                new BsonDocument("producedQuantity",
//                new BsonDocument("$switch",
//                new BsonDocument
//                            {
//                                { "branches",
//                new BsonArray
//                                {
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CPO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cpoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdOleinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "STEARIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.stearinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "PFAD"
//                                            }) },
//                                        { "then", "$DataJson.FormData.pfadMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "Loss"
//                                            }) },
//                                        { "then", "$DataJson.FormData.lossMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinImportMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt2" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SUNFLOWER FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.sunflowerFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB OIL WAX"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbOilWaxMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SOY ACID OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.soyAcidOilMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRUDE GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crudeGlycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinLocalMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinTradingMt" }
//                                    }
//                                } },
//                                { "default", 0 }
//                            }))),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" },
//                            { "commodity1", "$DataJson.FormData.commodity1" }
//                        } },
//                        { "soldQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") },
//                        { "cpoQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
//                        { "totalProducedQuantity",
//                new BsonDocument("$sum", "$producedQuantity") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } },
//            { "rateInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.rateInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument("dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }))) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "rateInr",
//                new BsonDocument("$first", "$DataJson.FormData.rateInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$commodity" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "commodity1", "$$paidUnpaid._id.commodity1" },
//                        { "soldQuantity", "$$paidUnpaid.soldQuantity" },
//                        { "cpoQuantity", "$$paidUnpaid.cpoQuantity" },
//                        { "totalProducedQuantity", "$$paidUnpaid.totalProducedQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) },
//                        { "rateInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$rateInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.rateInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 1 },
//            { "commodity1", 1 },
//            { "CompanyName", "$companyName" },
//            { "AvailableBalance",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$_commodity",
//                            "CPO"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$finalAdjustedQuantityMt",
//                            "$cpoQuantity"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$totalProducedQuantity",
//                            "$soldQuantity"
//                        })
//                }) },
//            { "commodity", "$_id" },
//            { "companyName", 1 },
//            { "rateInr", "$rateInr" }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "CompanyName", 1 },
//            { "Commodity", "$commodity" },
//            { "SalesCommodity", "$commodity1" },
//            { "Unrealised", new BsonDocument("$round", new BsonArray { new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    "$AvailableBalance",
//                    "$rateInr"
//                }), 4 })
//     }
//        })
//};
//            var pdur11 = datasetCollection.Aggregate<BsonDocument>(pdur1, aggregateOptions).ToList();
//            List<TotalUnrealisedModel> pdur111 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnrealisedModel>(pdur11).ToList();

//            var pmur1 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "commodity",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "commodity1", "$DataJson.FormData.commodity1" },
//                        { "dateFilter",
//                            new BsonDocument("$dateFromString",
//                                new BsonDocument
//                                {
//                                    { "dateString", new BsonDocument("$ifNull", new BsonArray { "$DataJson.FormData.deliveryStartDate", "0" }) },
//                                    { "onError",
//                                        new BsonDocument("$dateFromString",
//                                            new BsonDocument
//                                            {
//                                                { "dateString", "$DataJson.FormData.tradeDate" },
//                                                { "onError", BsonNull.Value }
//                                            }
//                                        )
//                                    }
//                                }
//                            )
//                        }
//                    }),
//                new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$addFields",
//                new BsonDocument("producedQuantity",
//                new BsonDocument("$switch",
//                new BsonDocument
//                            {
//                                { "branches",
//                new BsonArray
//                                {
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CPO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cpoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdOleinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "STEARIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.stearinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "PFAD"
//                                            }) },
//                                        { "then", "$DataJson.FormData.pfadMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "Loss"
//                                            }) },
//                                        { "then", "$DataJson.FormData.lossMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinImportMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RBD PALM OLEIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbdPalmoleinTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED PALM OIL-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rpoMt2" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.csfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SUNFLOWER FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.sunflowerFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSFO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsfoTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB FATTY ACID"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbFattyAcidMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RB OIL WAX"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rbOilWaxMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RRBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rrboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CDSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.cdsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "SOY ACID OIL"
//                                            }) },
//                                        { "then", "$DataJson.FormData.soyAcidOilMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboLocalMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "RSBO-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.rsboTradingMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "CRUDE GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.crudeGlycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGycerinMt" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-TRADING"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinLocalMt1" }
//                                    },
//                                    new BsonDocument
//                                    {
//                                        { "case",
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                            {
//                                                "$DataJson.FormData.commodity1",
//                                                "REFINED GLYCERIN-Ex-Tank"
//                                            }) },
//                                        { "then", "$DataJson.FormData.refinedGlycerinTradingMt" }
//                                    }
//                                } },
//                                { "default", 0 }
//                            }))),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" },
//                            { "commodity1", "$DataJson.FormData.commodity1" }
//                        } },
//                        { "soldQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") },
//                        { "cpoQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.cpoMt") },
//                        { "totalProducedQuantity",
//                new BsonDocument("$sum", "$producedQuantity") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } },
//            { "rateInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.rateInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) },
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument("dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }))) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "rateInr",
//                new BsonDocument("$first", "$DataJson.FormData.rateInr") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$commodity" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "commodity1", "$$paidUnpaid._id.commodity1" },
//                        { "soldQuantity", "$$paidUnpaid.soldQuantity" },
//                        { "cpoQuantity", "$$paidUnpaid.cpoQuantity" },
//                        { "totalProducedQuantity", "$$paidUnpaid.totalProducedQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) },
//                        { "rateInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$rateInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.rateInr" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 1 },
//            { "commodity1", 1 },
//            { "CompanyName", "$companyName" },
//            { "AvailableBalance",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$_commodity",
//                            "CPO"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$finalAdjustedQuantityMt",
//                            "$cpoQuantity"
//                        }),
//                    new BsonDocument("$subtract",
//                    new BsonArray
//                        {
//                            "$totalProducedQuantity",
//                            "$soldQuantity"
//                        })
//                }) },
//            { "commodity", "$_id" },
//            { "companyName", 1 },
//            { "rateInr", "$rateInr" }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "CompanyName", 1 },
//            { "Commodity", "$commodity" },
//            { "SalesCommodity", "$commodity1" },
//            { "Unrealised", new BsonDocument("$round", new BsonArray { new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    "$AvailableBalance",
//                    "$rateInr"
//                }), 4 })
//     }
//        })
//};
//            var pmur11 = datasetCollection.Aggregate<BsonDocument>(pdur1, aggregateOptions).ToList();
//            List<TotalUnrealisedModel> pmur111 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnrealisedModel>(pmur11).ToList();

//            var duty2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(toYear, toMonth, toDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalAvailableQuantity",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalAvailableQuantity" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "companyName", 1 },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalUnRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var duty22 = datasetCollection.Aggregate<BsonDocument>(duty2, aggregateOptions).ToList();
//            List<TotalUnRealisedDutyCost> duty222 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnRealisedDutyCost>(duty22).ToList();

//            var pdduty2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalAvailableQuantity",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalAvailableQuantity" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "companyName", 1 },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalUnRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pdduty22 = datasetCollection.Aggregate<BsonDocument>(pdduty2, aggregateOptions).ToList();
//            List<TotalUnRealisedDutyCost> pdduty222 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnRealisedDutyCost>(pdduty22).ToList();

//            var pmduty2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "ffda40c1-d4e6-491b-a40d-9a1837ef337b",
//                                "d1e8b4c9-b1b5-4349-828c-536d48e74093",
//                                "6f45b932-0e7f-433a-bbdb-ae284715c957",
//                                "35c40cf0-681b-46f4-bc96-eb50219ece25",
//                                "5cee7fe4-2891-4bb4-9a37-c9b473f74c46",
//                                "2b5cc22c-4d9f-41a7-a37d-2d3a63d017ce",
//                                "10f8c428-bd47-4dae-8e99-ca95d5a63e68",
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "10f8c428-bd47-4dae-8e99-ca95d5a63e68"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalPaidDutyInclIgstValueInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.totalUnpaidDutyQuantityMt") }
//                    })
//            } },
//            { "customsDuty",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "a971c5c8-ce7a-4640-b2ae-0348e005b9d9" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.inrCustomsDutyPerMt",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.startDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }))),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument("commodity", "$DataJson.FormData.commodity") },
//                        { "inrCustomsDutyPerMt",
//                new BsonDocument("$first", "$DataJson.FormData.inrCustomsDutyPerMt") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalSOT",
//                new BsonDocument("$sum", "$DataJson.FormData.sotQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalPaidDuty", "$$paidUnpaid.totalPaidDuty" },
//                        { "totalUnpaidDutyQuantity", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "inrCustomsDutyPerMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$customsDuty" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.inrCustomsDutyPerMt" }
//                            }) },
//                        { "totalAvailableQuantity",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.totalAvailableQuantity" }
//                            }) },
//                        { "totalSOT",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.totalSOT" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "companyName", 1 },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalPaidDuty",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$totalUnpaidDutyQuantity",
//                                    "$inrCustomsDutyPerMt"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$totalSOT"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "TotalUnRealisedDUTYCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$TotalUnRealisedDUTYCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pmduty22 = datasetCollection.Aggregate<BsonDocument>(pmduty2, aggregateOptions).ToList();
//            List<TotalUnRealisedDutyCost> pmduty222 = BsonHelper.ConvertBsonDocumentListToModel<TotalUnRealisedDutyCost>(pmduty22).ToList();

//            var fxCost2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(toYear, toMonth, toDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var fxCost22 = datasetCollection.Aggregate<BsonDocument>(fxCost2, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> fxCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(fxCost22).ToList();

//            var pdfxCost2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pdfxCost22 = datasetCollection.Aggregate<BsonDocument>(pdfxCost2, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> pdfxCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(pdfxCost22).ToList();

//            var pmfxCost2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalPaidAndUnpaid",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "dca15a7d-ff5f-4b73-aaf7-80d069923815",
//                                "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//               new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataSourceId",
//                                        "8aad163a-ab9c-4890-a446-9f2ffa6d29ba"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//               new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalPaidDuty",
//                new BsonDocument("$sum", "$DataJson.FormData.totalFxSettledValueInInr") },
//                        { "totalUnpaidDutyQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.fxValuePendingRemittance") }
//                    })
//            } },
//            { "dailyratesusdtoinr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId", "2dd458e8-af57-4f85-bc3d-cffafabbfcf1" },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.usdToInr",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) }
//                    }),
//                new BsonDocument("$addFields",
//                new BsonDocument
//                    {
//                        { "dateFilter",
//                new BsonDocument("$dateFromString",
//                new BsonDocument
//                            {
//                                { "dateString",
//                new BsonDocument("$ifNull",
//                new BsonArray
//                                    {
//                                        "$DataJson.FormData.entryDate",
//                                        "0"
//                                    }) },
//                                { "onError", BsonNull.Value }
//                            }) },
//                        { "companyName",
//                new BsonDocument("$cond",
//                new BsonArray
//                            {
//                                new BsonDocument("$eq",
//                                new BsonArray
//                                    {
//                                        "$DataJson.FormData.location",
//                                        "UMIRO-INDIA"
//                                    }),
//                                "UMIRO-INDIA",
//                                "ANA-INDIA"
//                            }) }
//                    }),
//                new BsonDocument("$match",
//                new BsonDocument("dateFilter",
//                new BsonDocument("$lte",
//                new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59)))),
//                new BsonDocument("$sort",
//                new BsonDocument("dateFilter", -1)),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "usdToInr",
//                new BsonDocument("$first", "$DataJson.FormData.usdToInr") }
//                    })
//            } },
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "IMPORTED" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum",
//                new BsonDocument("$cond",
//                new BsonArray
//                                {
//                                    new BsonDocument("$eq",
//                                    new BsonArray
//                                        {
//                                            "$DataJson.FormData.sourceCommodity",
//                                            "CPO"
//                                        }),
//                                    "$DataJson.FormData.cpoMt",
//                                    new BsonDocument("$cond",
//                                    new BsonArray
//                                        {
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                {
//                                                    "$DataJson.FormData.sourceCommodity",
//                                                    "CSFO"
//                                                }),
//                                            "$DataJson.FormData.csfoMt",
//                                            new BsonDocument("$cond",
//                                            new BsonArray
//                                                {
//                                                    new BsonDocument("$eq",
//                                                    new BsonArray
//                                                        {
//                                                            "$DataJson.FormData.sourceCommodity",
//                                                            "RBD PALM OLEIN-TRADING"
//                                                        }),
//                                                    "$DataJson.FormData.rbdPalmoleinImportMt",
//                                                    0
//                                                })
//                                        })
//                                })) }
//                    })
//            } },
//            { "sotData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "IMPORT-SG-ANA" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalPaidAndUnpaid" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalFxSettledValueInInr", "$$paidUnpaid.totalPaidDuty" },
//                        { "fxValuePendingRemittance", "$$paidUnpaid.totalUnpaidDutyQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "totalQuantityData",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$totalQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.totalAvailableQuantity" }
//                            }) },
//                        { "usdToInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$dailyratesusdtoinr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.usdToInr" }
//                            }) },
//                        { "quantityMt2",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$soldQuantityData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.quantityMt2" }
//                            }) },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$sotData" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.contractQuantityMt" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "Commodity", "$_id" },
//            { "companyName", 1 },
//            { "usdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$add",
//                    new BsonArray
//                        {
//                            "$totalFxSettledValueInInr",
//                            new BsonDocument("$multiply",
//                            new BsonArray
//                                {
//                                    "$fxValuePendingRemittance",
//                                    "$usdToInr"
//                                })
//                        }),
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalQuantityData",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        })
//                }) }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "Commodity", 1 },
//            { "CompanyName", "$companyName" },
//            { "UsdToInr", "$usdToInr" },
//            { "FxPaymentsCost",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                {
//                    new BsonDocument("$round",
//                    new BsonArray
//                        {
//                            "$FxPaymentsCost",
//                            4
//                        }),
//                    0
//                }) }
//        })
//};
//            var pmfxCost22 = datasetCollection.Aggregate<BsonDocument>(pmfxCost2, aggregateOptions).ToList();
//            List<TotalFxPaymentCost> pmfxCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalFxPaymentCost>(pmfxCost22).ToList();

//            var localFx2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalAvailableQuantity", "$$paidUnpaid.totalAvailableQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", 1 },
//            { "Localfx",new BsonDocument("$round", new BsonArray
//            {
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalAvailableQuantity",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }),
//                4
//            }) }
//        })
//};
//            var localFx22 = datasetCollection.Aggregate<BsonDocument>(localFx2, aggregateOptions).ToList();
//            List<TotalLocalFx> localFx222 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(localFx22).ToList();

//            var pdlocalFx2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalAvailableQuantity", "$$paidUnpaid.totalAvailableQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", 1 },
//            { "localfx",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalAvailableQuantity",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }) }
//        })
//};
//            var pdlocalFx22 = datasetCollection.Aggregate<BsonDocument>(pdlocalFx2, aggregateOptions).ToList();
//            List<TotalLocalFx> pdlocalFx222 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(pdlocalFx22).ToList();

//            var pmlocalFx2 = new List<BsonDocument>
//{
//    new BsonDocument("$facet",
//    new BsonDocument
//        {
//            { "totalQuantityData",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                                "c58946f2-215e-462a-962f-8c7ec3017257",
//                                "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                                "a0dfd197-45c5-4344-b736-645102ab778a",
//                                "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                                "53839149-0623-442a-a6bf-fd846db70e5b",
//                                "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.ImportUniqueId",
//                new BsonDocument("$nin",
//                new BsonArray
//                            {
//                                "",
//                                BsonNull.Value,
//                                " "
//                            }) },
//                        { "DataJson.FormData.type", "LOCAL" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.sourceCommodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "totalAvailableQuantity",
//                new BsonDocument("$sum", "$DataJson.FormData.quantityMt2") }
//                    })
//            } },
//            { "contractQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "contractQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.contractQuantityMt") }
//                    })
//            } },
//            { "valueInr",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false },
//                        { "DataJson.FormData.typeOfPurchase", "LOCAL-Purchase" }
//                    }),
//               new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "valueInr",
//                new BsonDocument("$sum", "$DataJson.FormData.valueInr") }
//                    })
//            } },
//            { "finalAdjustedQuantityMt",
//    new BsonArray
//            {
//                new BsonDocument("$match",
//                new BsonDocument
//                    {
//                        { "DataSourceId",
//                new BsonDocument("$in",
//                new BsonArray
//                            {
//                                "c201551e-8804-4025-95a6-90783b64f69b",
//                                "d87ea5af-aa5d-4499-a84e-8d1094170e01",
//                                "0122470e-ba5f-4d33-8aee-cf6ffa386fe4",
//                                "8435be4c-bbfb-4aac-b2b5-81d0204c6f7c",
//                                "f3d2f93e-0f15-4698-be40-9d0b5a4fafb1",
//                                "c67d3ede-c97e-4672-b10a-c87ff3e3cf15",
//                                "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                            }) },
//                        { "IsArchived", false }
//                    }),
//                new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryPeriod",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.contractDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "72e023c9-ff29-4e6f-ae71-8670769c81e6"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//                new BsonDocument("$group",
//                new BsonDocument
//                    {
//                        { "_id",
//                new BsonDocument
//                        {
//                            { "commodity", "$DataJson.FormData.commodity" },
//                            { "companyName", "$companyName" }
//                        } },
//                        { "finalAdjustedQuantityMt",
//                new BsonDocument("$sum", "$DataJson.FormData.finalAdjustedQuantityMt") }
//                    })
//            } }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument("data",
//    new BsonDocument("$map",
//    new BsonDocument
//                {
//                    { "input", "$totalQuantityData" },
//                    { "as", "paidUnpaid" },
//                    { "in",
//    new BsonDocument
//                    {
//                        { "_id", "$$paidUnpaid._id.commodity" },
//                        { "totalAvailableQuantity", "$$paidUnpaid.totalAvailableQuantity" },
//                        { "companyName", "$$paidUnpaid._id.companyName" },
//                        { "contractQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("customsItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$contractQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$customsItem.contractQuantityMt" }
//                            }) },
//                        { "valueInr",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("soldItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$valueInr" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id.commodity",
//                                                            "$$paidUnpaid._id.commodity"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$soldItem.valueInr" }
//                            }) },
//                        { "finalAdjustedQuantityMt",
//    new BsonDocument("$let",
//    new BsonDocument
//                            {
//                                { "vars",
//    new BsonDocument("sotItem",
//    new BsonDocument("$arrayElemAt",
//    new BsonArray
//                                        {
//                                            new BsonDocument("$filter",
//                                            new BsonDocument
//                                                {
//                                                    { "input", "$finalAdjustedQuantityMt" },
//                                                    { "as", "item" },
//                                                    { "cond",
//                                            new BsonDocument("$eq",
//                                            new BsonArray
//                                                        {
//                                                            "$$item._id",
//                                                            "$$paidUnpaid._id"
//                                                        }) }
//                                                }),
//                                            0
//                                        })) },
//                                { "in", "$$sotItem.finalAdjustedQuantityMt" }
//                            }) }
//                    } }
//                }))),
//    new BsonDocument("$unwind",
//    new BsonDocument("path", "$data")),
//    new BsonDocument("$replaceRoot",
//    new BsonDocument("newRoot", "$data")),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//        { "_id", 0},
//            { "Commodity", "$_id" },
//            { "CompanyName", 1 },
//            { "localfx",
//    new BsonDocument("$multiply",
//    new BsonArray
//                {
//                    new BsonDocument("$divide",
//                    new BsonArray
//                        {
//                            new BsonDocument("$subtract",
//                            new BsonArray
//                                {
//                                    "$totalAvailableQuantity",
//                                    "$finalAdjustedQuantityMt"
//                                }),
//                            "$contractQuantityMt"
//                        }),
//                    "$valueInr"
//                }) }
//        })
//};
//            var pmlocalFx22 = datasetCollection.Aggregate<BsonDocument>(pmlocalFx2, aggregateOptions).ToList();
//            List<TotalLocalFx> pmlocalFx222 = BsonHelper.ConvertBsonDocumentListToModel<TotalLocalFx>(pmlocalFx22).ToList();


//            var refiningCost2 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(toYear, toMonth, toDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedCnfCharges") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedCnfCharges", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var refiningCost22 = datasetCollection.Aggregate<BsonDocument>(refiningCost2, aggregateOptions).ToList();
//            List<TotalCnfCharges> refiningCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalCnfCharges>(refiningCost22).ToList();

//            var pdrefiningCost2 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(previousYear, previousMonth, previousDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedCnfCharges") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedCnfCharges", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var pdrefiningCost22 = datasetCollection.Aggregate<BsonDocument>(pdrefiningCost2, aggregateOptions).ToList();
//            List<TotalCnfCharges> pdrefiningCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalCnfCharges>(pdrefiningCost22).ToList();

//            var pmrefiningCost2 = new List<BsonDocument>
//            {
//                new BsonDocument("$match",
//    new BsonDocument
//        {
//            { "DataSourceId",
//    new BsonDocument("$in",
//    new BsonArray
//                {
//                    "bae0b939-6e5f-4291-8892-30bd1823b0cd",
//                    "c58946f2-215e-462a-962f-8c7ec3017257",
//                    "e99919ea-d36b-469b-99da-3d1d9823e2f6",
//                    "a0dfd197-45c5-4344-b736-645102ab778a",
//                    "48ad8f08-9ae5-4009-a4c4-2c2d33e9bb89",
//                    "53839149-0623-442a-a6bf-fd846db70e5b",
//                    "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                }) },
//            { "IsArchived", false },
//            { "DataJson.FormData.ImportUniqueId",
//    new BsonDocument("$nin",
//    new BsonArray
//                {
//                    "",
//                    BsonNull.Value,
//                    " "
//                }) }
//        }),
//    new BsonDocument("$addFields",
//    new BsonDocument
//        {
//            { "dateFilter",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                {
//                    { "dateString",
//    new BsonDocument("$ifNull",
//    new BsonArray
//                        {
//                            "$DataJson.FormData.deliveryStartDate",
//                            "0"
//                        }) },
//                    { "onError",
//    new BsonDocument("$dateFromString",
//    new BsonDocument
//                        {
//                            { "dateString", "$DataJson.FormData.tradeDate" },
//                            { "onError", BsonNull.Value }
//                        }) }
//                }) },
//            { "companyName",
//    new BsonDocument("$cond",
//    new BsonArray
//                {
//                    new BsonDocument("$eq",
//                    new BsonArray
//                        {
//                            "$DataSourceId",
//                            "f92678f3-0aed-418b-963d-4ec29bf98f1d"
//                        }),
//                    "UMIRO-INDIA",
//                    "ANA-INDIA"
//                }) }
//        }),
//new BsonDocument("$match",
//                    new BsonDocument
//                    {
//                        { "dateFilter", new BsonDocument("$gte", new DateTime(fromYear, fromMonth, fromDay))
//                                             .Add("$lte", new DateTime(pastYear, pastMonth, pastDay, 23, 59, 59))
//                        }
//                    }
//                ),
//    new BsonDocument("$group",
//    new BsonDocument
//        {
//            { "_id",
//    new BsonDocument
//            {
//                { "commodity", "$DataJson.FormData.sourceCommodity" },
//                { "companyName", "$companyName" }
//            } },
//            { "totalSoldQuantityYTD",
//    new BsonDocument("$sum", "$DataJson.FormData.expectedCnfCharges") }
//        }),
//    new BsonDocument("$project",
//    new BsonDocument
//        {
//            { "_id", 0 },
//            { "totalSoldQuantityYTD", 1 },
//            { "Commodity", "$_id.commodity" },
//            { "CompanyName", "$_id.companyName" }
//        }),new BsonDocument("$project",
//                                new BsonDocument
//                                {
//                                    { "Commodity", 1},
//                                    { "CompanyName", 1 },
//                                    { "UsdToInr", 1 },
//                                    { "ExpectedCnfCharges", new BsonDocument( "$ifNull", new BsonArray { new BsonDocument("$round", new BsonArray { "$totalSoldQuantityYTD", 4 }), 0}) }
//                                }
//                            )
//            };
//            var pmrefiningCost22 = datasetCollection.Aggregate<BsonDocument>(pmrefiningCost2, aggregateOptions).ToList();
//            List<TotalCnfCharges> pmrefiningCost222 = BsonHelper.ConvertBsonDocumentListToModel<TotalCnfCharges>(pmrefiningCost22).ToList();

            //-------------ANA-&-UMIRO-----------P&L new calculations start------------------------//

            foreach (var parent in PositionCommodities.Where(x => x.ParentId == 0).OrderBy(x => x.Order))
            {
                decimal usdToInr = positionList11.FirstOrDefault(x => x.CompanyName == parent.CompanyName?.ToLower() && x.Commodity == parent.NameLower)?.USDToInr ?? 0;
                decimal totalUnrealised = 0;
                decimal totalTodayUnrealised = 0;
                decimal totalMonthUnrealised = 0;
                decimal usdToInr_MTM = positionList8.FirstOrDefault(x => x.USDToInr > 0)?.USDToInr ?? 0;
                decimal oldUsdToInr = positionList8.FirstOrDefault(x => x.USDToInr > 0)?.OldUSDToInr ?? 0;
                decimal dayChangeMtm = (oldUsdToInr == 0) ? 0 : (usdToInr_MTM - oldUsdToInr) * 100 / oldUsdToInr;
                List <PositionData> positionDataChilds = new List<PositionData>();
                decimal dayChange = 0;
                if (parent.CompanyName == "SG-ANA" || parent.CompanyName == "ORIMU-SG")
                {
                    var aaa = "";
                }
                PositionList7 dailyMTM = positionList8.FirstOrDefault(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.Name?.ToLower());
                PositionList7 previousDayMTM = positionList8.FirstOrDefault(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.Name?.ToLower());
                PositionList1 openingBalance = positionList1.FirstOrDefault(x => (x.Commodity?.ToLower() == parent.Name?.ToLower()) && (x.CompanyName?.ToLower() == parent.CompanyName?.ToLower()));
                PositionData positionData = new PositionData();

                positionData.PositionName = parent.Position;
                positionData.Commodity = parent.DisplayName;
                positionData.CommodityKey = parent.Name;
                positionData.Order = parent.Order;
                positionData.Id = parent.Id;
                positionData.IsGroupBy = parent.IsGroupBy;
                positionData.CompanyName = parent.CompanyName;
                positionData.Position = parent.Position;
                positionData.IsBold = parent.DisplayName?.Contains("Total") ?? false;
                positionData.OpeningBalance = openingBalance?.OpeningBalance ?? 0;

                if (parent.Position == "PAPER & FUTURES")
                {
                    dayChange = positionList20.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.ParentCommodity == parent.NameLower)?.TodayTotalQty ?? 0;
                    positionData.YTDgross = positionList20.FirstOrDefault(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.ParentCommodity?.ToLower() == parent.NameLower?.ToLower())?.TotalQty ?? 0;
                    positionData.YTDgross1 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 1).Month &&
                                                x.Year == monthsList.First(x => x.Order == 1).Year)?.TotalQty ?? 0;
                    positionData.YTDgross2 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 2).Month &&
                                                x.Year == monthsList.First(x => x.Order == 2).Year)?.TotalQty ?? 0;
                    positionData.YTDgross3 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 3).Month &&
                                                x.Year == monthsList.First(x => x.Order == 3).Year)?.TotalQty ?? 0;
                    positionData.YTDgross4 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 4).Month &&
                                                x.Year == monthsList.First(x => x.Order == 4).Year)?.TotalQty ?? 0;
                    positionData.YTDgross5 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 5).Month &&
                                                x.Year == monthsList.First(x => x.Order == 5).Year)?.TotalQty ?? 0;
                    positionData.YTDgross6 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 6).Month &&
                                                x.Year == monthsList.First(x => x.Order == 6).Year)?.TotalQty ?? 0;
                    positionData.YTDgross7 = positionList21.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.ParentCommodity == parent.NameLower &&
                                                x.Month == monthsList.First(x => x.Order == 7).Month &&
                                                x.Year == monthsList.First(x => x.Order == 7).Year)?.TotalQty ?? 0;
                    positionData.TotalGross = positionData.YTDgross + positionData.YTDgross2 + positionData.YTDgross3 +
                                              positionData.YTDgross4 + positionData.YTDgross5 + positionData.YTDgross6 + positionData.YTDgross7;
                    positionData.DayChange = dayChange == 0 ? 0 : (positionData.TotalGross - dayChange)/ dayChange;
                    positionData.DailyMTM = parent.Name?.Contains("PKPG-") == true ? dailyMTM?.CnfRateUsd ?? 0 : dailyMTM?.DerivedMdexRateUsd ?? 0;
                    positionData.DayChangeMtm = parent.Name?.Contains("PKPG-") == true ?
                                                 (previousDayMTM?.OldCnfRateUsd ?? 0) == 0 ? 0 : (positionData.DailyMTM - previousDayMTM?.OldCnfRateUsd ?? 0) * 100 / previousDayMTM?.OldCnfRateUsd ?? 0
                                                : (previousDayMTM?.OldDerivedMdexRateUsd ?? 0) == 0 ? 0 : (positionData.DailyMTM - previousDayMTM?.OldDerivedMdexRateUsd ?? 0) * 100 / previousDayMTM?.OldDerivedMdexRateUsd ?? 0;
                    positionData.YTDRealisedPAndL = (dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0 
                                                       : (decimal)(positionData.OpeningBalance + (positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.RealizedQty ?? 0))/ (dailyMTM?.SpotRateUsdMyr ?? 0);
                    positionData.YTDUnRealisedPAndL = ((dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0
                                                        : ((positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.UnRealizedValue ?? 0)
                                                          - (positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.UnRealizedQty ?? 0)
                                                       ) / (dailyMTM?.SpotRateUsdMyr ?? 0))
                                                       + ((positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.UnRealizedValue ?? 0) * positionData?.DailyMTM ?? 0)
                                                       - ((positionData?.DailyMTM ?? 0) == 0 ? 0
                                                       : (decimal)((positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.UnRealizedQty ?? 0) / (positionData?.DailyMTM ?? 0)));
                    positionData.YTDTotalPAndL = positionData.YTDRealisedPAndL + positionData.YTDUnRealisedPAndL;
                    positionData.DayPAndL = positionData.YTDTotalPAndL - 
                                              ((dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0
                                                       : (positionData.OpeningBalance + positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.TodayRealizedQty ?? 0) / (dailyMTM?.SpotRateUsdMyr ?? 0)
                                           + (dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0
                                                       : (positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.TodayUnRealizedValue ?? 0
                                                          - positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.TodayUnRealizedQty ?? 0
                                                       ) / (dailyMTM?.SpotRateUsdMyr ?? 0)
                                                       +
                                                       (positionData?.DailyMTM ?? 0) == 0 ? 0
                                                       : (positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.TodayUnRealizedValue ?? 0
                                                          - positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.TodayUnRealizedQty ?? 0
                                                       ) / (positionData?.DailyMTM ?? 0));
                    positionData.MTDPAndL = positionData.YTDTotalPAndL - 
                                              ((dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0
                                                       : (positionData.OpeningBalance + positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.MonthRealizedQty ?? 0) / (dailyMTM?.SpotRateUsdMyr ?? 0)
                                           + (dailyMTM?.SpotRateUsdMyr ?? 0) == 0 ? 0
                                                       : (positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.MonthUnRealizedValue ?? 0
                                                          - positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.MonthUnRealizedQty ?? 0
                                                       ) / (dailyMTM?.SpotRateUsdMyr ?? 0)
                                                       +
                                                       (positionData?.DailyMTM ?? 0) == 0 ? 0
                                                       : (positionList23.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.MonthUnRealizedValue ?? 0
                                                          - positionList22.FirstOrDefault(x => x.SourceCommodity == parent.NameLower && x.CompanyName == parent.CompanyName.ToLower())?.MonthUnRealizedQty ?? 0
                                                       ) / (positionData?.DailyMTM ?? 0));
                }
                else if (parent.CompanyName == "SG-ANA" || parent.CompanyName == "ORIMU-SG")
                {
                    PositionList9 sgData = positionList24.FirstOrDefault(x => x.SourceCommodity.ToLower() == parent.NameLower);
                    PositionList9 orimuData = positionList25.FirstOrDefault(x => x.SourceCommodity.ToLower() == parent.NameLower);
                    var cName = parent.CompanyName == "SG-ANA" ? "ANA-INDIA" : "UMIRO-INDIA";
                    positionData.OpeningBalance = -999999;
                    positionData.YTDgross7 = -88888;
                    positionData.YTDgross = parent.CompanyName == "SG-ANA" ? sgData?.TotalQty ?? 0 : orimuData?.TotalQty ?? 0;
                    positionData.TotalGross = (-1) * positionList26.FirstOrDefault(x => x.CompanyName == cName && x.Commodity.ToLower() == parent.NameLower)?.TotalQty ?? 0;
                    positionData.NetClosing = positionData.YTDgross + positionData.TotalGross;
                    positionData.NetOpening = (parent.CompanyName == "SG-ANA" ? sgData?.TodayTotalQty ?? 0 : orimuData?.TodayTotalQty ?? 0) 
                        + ((-1) * positionList26.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == parent.NameLower)?.TodayTotalQty ?? 0);
                    positionData.DayChange = positionData.NetOpening == 0 ? 0 : (positionData.NetClosing - positionData.NetOpening) * 100 / positionData.NetOpening;
                    positionData.DailyMTM = dailyMTM?.CnfRateUsd ?? 0;
                    positionData.DayChangeMtm = (previousDayMTM?.OldCnfRateUsd ?? 0) == 0 ? 0 : (positionData.DailyMTM - previousDayMTM?.OldCnfRateUsd ?? 0) * 100 / previousDayMTM?.OldCnfRateUsd ?? 0;
                    positionData.YTDRealisedPAndL = parent.CompanyName == "SG-ANA" ? sgData?.Realized ?? 0 : orimuData?.Realized ?? 0;
                    positionData.YTDUnRealisedPAndL = parent.CompanyName == "SG-ANA" ? sgData?.UnRealized ?? 0 : orimuData?.UnRealized ?? 0;
                    positionData.YTDTotalPAndL = positionData.YTDRealisedPAndL + positionData.YTDUnRealisedPAndL;
                    positionData.DayPAndL = positionData.YTDTotalPAndL - (parent.CompanyName == "SG-ANA" ? sgData?.TodayRealized ?? 0 + sgData?.TodayUnRealized ?? 0 : orimuData?.TodayRealized ?? 0 + orimuData?.TodayUnRealized ?? 0);
                    positionData.MTDPAndL = positionData.YTDTotalPAndL - (parent.CompanyName == "SG-ANA" ? sgData?.MonthRealized ?? 0 + sgData?.MonthUnRealized ?? 0 : orimuData?.MonthRealized ?? 0 + orimuData?.MonthUnRealized ?? 0);
                }
                else
                {
                    positionData.YTDgross = positionData.OpeningBalance + positionList2.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity == parent.Name)?.TotalQty ?? 0;
                    positionData.YTDgross1 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 1).Month &&
                                                x.Year == monthsList.First(x => x.Order == 1).Year)?.TotalQty ?? 0;
                    positionData.YTDgross2 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 2).Month &&
                                                x.Year == monthsList.First(x => x.Order == 2).Year)?.TotalQty ?? 0;
                    positionData.YTDgross3 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 3).Month &&
                                                x.Year == monthsList.First(x => x.Order == 3).Year)?.TotalQty ?? 0;
                    positionData.YTDgross4 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 4).Month &&
                                                x.Year == monthsList.First(x => x.Order == 4).Year)?.TotalQty ?? 0;
                    positionData.YTDgross5 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 5).Month &&
                                                x.Year == monthsList.First(x => x.Order == 5).Year)?.TotalQty ?? 0;
                    positionData.YTDgross6 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 6).Month &&
                                                x.Year == monthsList.First(x => x.Order == 6).Year)?.TotalQty ?? 0;
                    positionData.YTDgross7 = positionList3.FirstOrDefault(x =>
                                                x.CompanyName == parent.CompanyName &&
                                                x.Commodity == parent.Name &&
                                                x.Month == monthsList.First(x => x.Order == 7).Month &&
                                                x.Year == monthsList.First(x => x.Order == 7).Year)?.TotalQty ?? 0;
                    positionData.TotalGross = positionData.YTDgross + positionData.YTDgross2 + positionData.YTDgross3 +
                                              positionData.YTDgross4 + positionData.YTDgross5 + positionData.YTDgross6 + positionData.YTDgross7;
                    positionData.DailyMTM = parent.Id == 1 ? usdToInr_MTM : dailyMTM?.DerivedUsdRate ?? 0;
                    positionData.DayChangeMtm = parent.Id == 1 ? dayChangeMtm : (previousDayMTM?.OldDerivedUsdRate ?? 0) == 0 ? 0 : (positionData.DailyMTM - previousDayMTM?.OldDerivedUsdRate ?? 0) * 100 / previousDayMTM?.OldDerivedUsdRate ?? 0;
                    var rVal = positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.RealisedValue);
                    //var c = positionList27.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty;
                    //positionData.YTDRealisedPAndL = usdToInr == 0 ? 0 :
                    //                               (positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.RealisedValue) ?? 0
                    //                                - positionList27.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty ?? 0
                    //                                - positionList17.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.RefiningCost ?? 0)
                    //                                / usdToInr;
                    //var fxc = fxCost111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var usdInrVal = fxc?.FirstOrDefault()?.UsdToInr;
                    //var r = realised111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.ParentCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.RealisedValue);
                    //var d = duty111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalRealisedDUTYCost);
                    //var f = fxCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var l = localFx111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var rc = refiningCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedRefiningCostInr1);
                    //positionData.YTDRealisedPAndL = (decimal)(usdInrVal != null ?
                    //                                   (r - (d + f + l + rc)) / (decimal)usdInrVal
                    //                                : 0);
                    positionData.YTDRealisedPAndL = (decimal)vstodate.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.SourceCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.PandLRealisedUSD);


                    foreach (var child in PositionCommodities.Where(x => x.ParentId == parent.Id))
                    {
                        PositionData positionDataChild = new PositionData();
                        positionDataChild.PositionName = child.Position;
                        positionDataChild.Order = child.Order;
                        positionDataChild.Commodity = child.DisplayName;
                        positionDataChild.CommodityKey = child.Name;
                        positionDataChild.CompanyName = child.CompanyName;
                        positionDataChild.Position = child.Position;
                        positionDataChild.Id = child.Id;
                        positionDataChild.YTDgross = child.NameLower == "loss" ?
                                                     (-1) * positionList12.FirstOrDefault(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == child.NameKey.ToLower() && x.ParentCommodity.ToLower() == parent.NameKey.ToLower())?.TotalQty ?? 0
                                                          : child.NameLower == "cancellation" ?
                                                             positionList19.FirstOrDefault(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.ProductGroup?.ToLower() == parent.Name?.ToLower())?.Cancellation ?? 0
                                                               : (-1) * positionList4.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower()
                                                                     && x.Commodity.ToLower() == child.NameLower?.ToLower())?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross1 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 1).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 1).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross2 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 2).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 2).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross3 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 3).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 3).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross4 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 4).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 4).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross5 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 5).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 5).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross6 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 6).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 6).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.YTDgross7 = (-1) * positionList5.Where(x =>
                                                    x.CompanyName == parent.CompanyName &&
                                                    x.Commodity.ToLower() == child.NameLower &&
                                                    x.Month == monthsList.First(x => x.Order == 7).Month &&
                                                    x.Year == monthsList.First(x => x.Order == 7).Year)?.Sum(x => x.TotalQty) ?? 0;
                        positionDataChild.TotalGross = positionDataChild.YTDgross + positionDataChild.YTDgross2 + positionDataChild.YTDgross3 +
                                              positionDataChild.YTDgross4 + positionDataChild.YTDgross5 + positionDataChild.YTDgross6 + positionDataChild.YTDgross7;
                        positionDataChild.DayChange = positionDataChild.TotalGross == 0 ? 0 :
                                                      (child.NameLower == "loss" ?
                                                         (-1) * positionList13.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity == child.NameKey)?.TotalQty ?? 0
                                                          : child.NameLower == "cancellation" ?
                                                             positionList19.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.ProductGroup == parent.ProductGroup)?.Cancellation ?? 0
                                                               : (-1) * positionList4.Where(x => x.CompanyName == parent.CompanyName
                                                                              && x.Commodity.ToLower() == child.NameLower)?
                                                                   .Sum(x => x.TodayTotalQty) ?? 0
                                                      ) * 100 / positionDataChild.TotalGross;

                        dayChange = dayChange + (-1) * positionList4.Where(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?
                                                             .Sum(x => x.TodayTotalQty) ?? 0;
                        totalUnrealised = totalUnrealised + ((positionList12.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity == child.NameKey)?.TotalQty ?? 0
                                                             - positionList4.Where(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.Sum(x => x.TotalQty) ?? 0)
                                                             * positionList11.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.MTMRate ?? 0);
                        totalTodayUnrealised = totalUnrealised + ((positionList13.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity == child.NameKey)?.TotalQty ?? 0
                                                             - positionList4.Where(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.Sum(x => x.TodayTotalQty) ?? 0)
                                                             * positionList11.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.MTMRate ?? 0);
                        totalMonthUnrealised = totalUnrealised + ((positionList14.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity == child.NameKey)?.TotalQty ?? 0
                                                             - positionList4.Where(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.Sum(x => x.MonthTotalQty) ?? 0)
                                                             * positionList11.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.Commodity.ToLower() == child.NameLower)?.MTMRate ?? 0);

                        positionDataChilds.Add(positionDataChild);
                    }
                    positionData.Children = positionDataChilds;
                    positionData.NetClosing = positionData.TotalGross + positionDataChilds.Sum(x => x.TotalGross);
                    positionData.NetOpening = positionData.NetClosing
                                                 - positionList2.FirstOrDefault(x => x.CompanyName == parent.CompanyName
                                                                                    && x.Commodity == parent.Name)?.TodayTotalQty ?? 0
                                                 - dayChange;
                    positionData.DayChange = positionData.NetOpening == 0 ? 0 : (positionData.NetClosing - positionData.NetOpening) * 100 / positionData.NetOpening;
                    //var fxc22 = fxCost222.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var usdInrVal222 = fxc22?.FirstOrDefault()?.UsdToInr;
                    //var r22 = unrealised111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Unrealised);
                    //var d22 = duty222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalUnRealisedDUTYCost);
                    //var f22 = fxCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var l22 = localFx222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var rc22 = refiningCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedCnfCharges);
                    //var ur = (r22 - (d22 + f22 + l22 + rc22));
                    //positionData.YTDUnRealisedPAndL = (decimal)(usdInrVal222 != null ?
                      //                                 (r22 - (d22 + f22 + l22 + rc22)) / (decimal)usdInrVal222
                        //                            : 0);
                    positionData.YTDUnRealisedPAndL = (decimal)vstodate.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.SourceCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.PandLUnRealisedUSD);
                    //positionData.YTDUnRealisedPAndL = usdToInr == 0 ? 0 :
                    //                              (totalUnrealised
                    //                               - positionList16.Where(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.Select(x => x.UnRelDuty + x.UnRelFX).FirstOrDefault() ?? 0
                    //                               - positionList18.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.RefiningCost ?? 0)
                    //                               / usdToInr;
                    positionData.YTDTotalPAndL = positionData.YTDRealisedPAndL + positionData.YTDUnRealisedPAndL;
                    //var fxc1 = prevdayfxCost111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var usdInrVal1 = fxc1?.FirstOrDefault()?.UsdToInr;
                    //var r1 = prevdayrealised111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.ParentCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.RealisedValue);
                    //var d1 = prevdayduty111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalRealisedDUTYCost);
                    //var f1 = prevdayfxCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var l1 = prevdaylocalFx111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var rc1 = prevdayrefiningCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedRefiningCostInr1);
                    //var prevdayRealisedPAndL = (decimal)(usdInrVal1 != null ?
                    //                                   (r1 - (d1 + f1 + l1 + rc1)) / (decimal)usdInrVal1
                    //                                : 0);
                    //var pdfxc22 = pdfxCost222.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var pdusdInrVal222 = pdfxc22?.FirstOrDefault()?.UsdToInr;
                    //var pdr22 = pdur111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Unrealised);
                    //var pdd22 = pdduty222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalUnRealisedDUTYCost);
                    //var pdf22 = pdfxCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var pdl22 = pdlocalFx222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var pdrc22 = pdrefiningCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedCnfCharges);
                    //var pdur = (r22 - (d22 + f22 + l22 + rc22));
                    //var prevdayUnRealisedPAndL = (decimal)(pdusdInrVal222 != null ?
                    //                                   (pdr22 - (pdd22 + pdf22 + pdl22 + pdrc22)) / (decimal)pdusdInrVal222
                    //                                : 0);
                    //positionData.DayPAndL = prevdayRealisedPAndL != null && prevdayUnRealisedPAndL != null ? prevdayUnRealisedPAndL + prevdayRealisedPAndL : 0;
                    //positionData.DayPAndL = (usdToInr == 0 ? 0 :
                    //                               ((positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.RealisedValue) ?? 0
                    //                                - positionList27.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty ?? 0
                    //                                - positionList17.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.RefiningCost ?? 0)
                    //                                - (positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.TodayRealisedValue) ?? 0
                    //                                - positionList29.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty ?? 0
                    //                                - positionList17.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.TodayRefiningCost ?? 0))
                    //                                / usdToInr)
                    //                         + (usdToInr == 0 ? 0 :
                    //                              (totalTodayUnrealised
                    //                               - positionList16.Where(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.Select(x => x.TodayUnRelDuty + x.TodayUnRelFX).FirstOrDefault() ?? 0
                    //                               - positionList18.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.TodayRefiningCost ?? 0)
                    //                               / usdToInr);
                    //var fxc2 = pastmfxCost111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var usdInrVal2 = fxc2?.FirstOrDefault()?.UsdToInr;
                    //var r2 = prevmrealised111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.ParentCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.RealisedValue);
                    //var d2 = pastmduty111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalRealisedDUTYCost);
                    //var f2 = pastmfxCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var l2 = prevmlocalFx11.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var rc2 = prevmrefiningCost111.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedRefiningCostInr1);
                    //var prevmRealisedPAndL = (decimal)(usdInrVal2 != null ?
                    //                                   (r2 - (d2 + f2 + l2 + rc2)) / (decimal)usdInrVal2
                    //                                : 0);

                    //var pmfxc22 = pmfxCost222.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower()).ToList();
                    //var pmusdInrVal222 = pmfxc22?.FirstOrDefault()?.UsdToInr;
                    //var pmr22 = pmur111.Where(x => x.CompanyName?.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Unrealised);
                    //var pmd22 = pmduty222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.TotalUnRealisedDUTYCost);
                    //var pmf22 = pmfxCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.FxPaymentsCost);
                    //var pml22 = pmlocalFx222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.Localfx);
                    //var pmrc22 = pmrefiningCost222.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.Commodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.ExpectedCnfCharges);
                    //var pmur = (r22 - (d22 + f22 + l22 + rc22));
                    //var prevmUnRealisedPAndL = (decimal)(pmusdInrVal222 != null ?
                    //                                   (pmr22 - (pmd22 + pmf22 + pml22 + pmrc22)) / (decimal)pmusdInrVal222
                    //                                : 0);
                    //positionData.MTDPAndL = prevmRealisedPAndL != null && prevmUnRealisedPAndL != null ? prevmRealisedPAndL + prevmUnRealisedPAndL : 0;
                    //positionData.MTDPAndL = (usdToInr == 0 ? 0 :
                    //                               ((positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.RealisedValue) ?? 0
                    //                                - positionList27.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty ?? 0
                    //                                - positionList17.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.RefiningCost ?? 0)
                    //                                - (positionList4.Where(x => x.CompanyName == parent.CompanyName && x.ParentCommodity.ToLower() == parent.NameLower)?.Sum(x => x.MonthRealisedValue) ?? 0
                    //                                - positionList29.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity == parent.NameLower)?.TotalQty ?? 0
                    //                                - positionList17.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.MonthRefiningCost ?? 0))
                    //                                / usdToInr)
                    //                         + (usdToInr == 0 ? 0 :
                    //                              (totalMonthUnrealised
                    //                               - positionList16.Where(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.Select(x => x.MonthUnRelDuty + x.MonthUnRelFX).FirstOrDefault() ?? 0
                    //                               - positionList18.FirstOrDefault(x => x.CompanyName == parent.CompanyName && x.SourceCommodity.ToLower() == parent.NameLower)?.MonthRefiningCost ?? 0)
                    //                               / usdToInr);
                    var daypnl = (decimal)vspdate.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.SourceCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.PandLUSD);
                    positionData.DayPAndL = positionData.YTDTotalPAndL - daypnl;
                    var mpnl = (decimal)vspm.Where(x => x.CompanyName.ToLower() == parent.CompanyName?.ToLower() && x.SourceCommodity?.ToLower() == parent.NameLower?.ToLower())?.Sum(x => x.PandLUSD);
                    positionData.MTDPAndL = positionData.YTDTotalPAndL - mpnl;
                }
                positionDataList.Add(positionData);
            }
            return positionDataList;
        }

    }
}

//----------------------------Models------------------------------------------//

    public class TotalRealisedDutyCost
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal? TotalRealisedDUTYCost { get; set; }

    }
    public class TotalFxPaymentCost
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal? FxPaymentsCost { get; set; }
        public decimal? UsdToInr { get; set; }
    }
    public class TotalRefiningCost
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal? ExpectedRefiningCostInr1 { get; set; }
    }
    public class TotalLocalFx
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal? Localfx { get; set; }
    }
    public class TotalUnrealisedModel 
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public string SalesCommodity { get; set; }
        public decimal Unrealised { get; set; }
    }
    public class TotalUnRealisedDutyCost
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal? TotalUnRealisedDUTYCost { get; set; }

    }

    public class TotalCnfCharges 
    {
        public string CompanyName { get; set; }
        public string Commodity { get; set; }
        public decimal ExpectedCnfCharges { get; set; }
        public decimal? UsdToInr { get; set; }
    }